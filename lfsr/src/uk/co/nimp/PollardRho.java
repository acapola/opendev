package uk.co.nimp;

/*************************************************************************
 *  Compilation:  javac PollardRho.java
 *  Execution:    java PollardRho N
 *
 *  Factor N using the Pollard-Rho method.
 *
 *  % java PollardRho 44343535354351600000003434353
 *  149
 *  329569479697
 *  903019357561501
 *
 *************************************************************************/

import java.math.BigInteger;
import java.util.*;
//import java.security.SecureRandom;


class PollardRho {
    private final static BigInteger ZERO = new BigInteger("0");
    private final static BigInteger ONE  = new BigInteger("1");
    private final static BigInteger TWO  = new BigInteger("2");
    //private final static SecureRandom random = new SecureRandom();
    private final static Random random = new Random();

    public static BigInteger rho(BigInteger n) {
        BigInteger divisor;
        BigInteger c  = new BigInteger(n.bitLength(), random);
        BigInteger x  = new BigInteger(n.bitLength(), random);
        BigInteger xx = x;

        // check divisibility by 2
        if (n.mod(TWO).compareTo(ZERO) == 0) return TWO;

        do {
            x  =  x.multiply(x).mod(n).add(c).mod(n);
            xx = xx.multiply(xx).mod(n).add(c).mod(n);
            xx = xx.multiply(xx).mod(n).add(c).mod(n);
            divisor = x.subtract(xx).gcd(n);
        } while((divisor.compareTo(ONE)) == 0);

        return divisor;
    }

    public static void factor(BigInteger n, List<BigInteger> factors) {
        if (n.compareTo(ONE) == 0) return;
        if (n.isProbablePrime(20)) {
            //System.out.println(n);
            factors.add(n);
            return;
        }
        BigInteger divisor = rho(n);
        factor(divisor,factors);
        factor(n.divide(divisor),factors);
    }
    public static BigInteger[] factor(BigInteger n) {
        if(n.compareTo(BigInteger.ONE)<=0){
            //BigInteger []out = new BigInteger[1];
            //out[0] = BigInteger.ZERO;
            return new BigInteger[0];
        }
        ArrayList<BigInteger> factors = new ArrayList<BigInteger>();
        factor(n,factors);
        Collections.sort(factors);
        return factors.toArray(new BigInteger[factors.size()]);
    }
    public static Map<BigInteger,Integer> factorMap(BigInteger n){
        Map<BigInteger,Integer> factorsMap = new HashMap<BigInteger,Integer>();
        if(n.compareTo(BigInteger.ONE)<=0){
            //factorsMap.put(BigInteger.ZERO,0);
            return factorsMap;
        }
        ArrayList<BigInteger> factors = new ArrayList<BigInteger>();
        factor(n,factors);
        for(BigInteger f: factors){
            int power = 1;
            if(factorsMap.containsKey(f)) power += factorsMap.get(f);
            factorsMap.put(f,power);
        }
        return factorsMap;
    }

    /*public static Map<Integer,Integer> factorPowerOfTwoMinusOne(int powerOfTwoMinusOne){
        return intFactorsPowersOfTwoMinusOne.get(powerOfTwoMinusOne);
    }
    public static Map<Long,Integer> factorPowerOfTwoMinusOne(long powerOfTwoMinusOne){
        return longFactorsPowersOfTwoMinusOne.get(powerOfTwoMinusOne);
    }*/
    public static Map<BigInteger,Integer> factorPowerOfTwoMinusOne(BigInteger powerOfTwoMinusOne){
        if(bigIntegerFactorsPowersOfTwoMinusOne.containsKey(powerOfTwoMinusOne)) {
            return bigIntegerFactorsPowersOfTwoMinusOne.get(powerOfTwoMinusOne);
        }else{
            return factorMap(powerOfTwoMinusOne);//likely to take while!!!
        }
    }
    public static BigInteger[] factorPowerOfTwoMinusOne_Array(BigInteger powerOfTwoMinusOne){
        Map<BigInteger,Integer> factors = factorPowerOfTwoMinusOne(powerOfTwoMinusOne);
        int nFactors=0;
        for(BigInteger factor:factors.keySet()){
            nFactors+=factors.get(factor);
        }
        BigInteger[] out = new BigInteger[nFactors];
        int i=0;
        for(BigInteger factor:factors.keySet()){
            int n=factors.get(factor);
            for(;n>0;n--) out[i++] = factor;
        }
        return out;
    }

    static void writeMersenneFactors(){
        ArrayList<BigInteger> nums = new ArrayList<BigInteger>();
        nums.addAll(bigIntegerFactorsPowersOfTwoMinusOne.keySet());
        Collections.sort(nums);
        for(BigInteger num:nums){
            Map<BigInteger,Integer> factors = bigIntegerFactorsPowersOfTwoMinusOne.get(num);
            System.out.print(num.toString(16).toUpperCase());
            ArrayList<BigInteger> sortedFactors = new ArrayList<BigInteger>();
            sortedFactors.addAll(factors.keySet());
            Collections.sort(sortedFactors);
            for(BigInteger f:sortedFactors){
                System.out.print(" "+f.toString(16).toUpperCase()+" "+BigInteger.valueOf(factors.get(f)).toString(16).toUpperCase());
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        writeMersenneFactors();
        BigInteger n;
        if(args.length==0){
            Scanner sc = new Scanner(System.in);

            System.out.print("number to factor: ");
            n= new BigInteger(sc.nextLine());
        } else {
            n = new BigInteger(args[0]);
        }
        BigInteger[] factors = factor(n);
        for(BigInteger f:factors){
            System.out.println(f);
        }
    }/*
    static Map<Integer,Map<Integer,Integer>> intFactorsPowersOfTwoMinusOne = new HashMap<Integer,Map<Integer,Integer>>(31);
    static {
        Map<Integer,Integer> factorsMap = new HashMap<Integer,Integer>();
        factorsMap.put(1,1);
        intFactorsPowersOfTwoMinusOne.put(0x1,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3,1);
        intFactorsPowersOfTwoMinusOne.put(0x3,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(7,1);
        intFactorsPowersOfTwoMinusOne.put(0x7,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3,1);
        factorsMap.put(5,1);
        intFactorsPowersOfTwoMinusOne.put(0xf,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(31,1);
        intFactorsPowersOfTwoMinusOne.put(0x1f,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3,2);
        factorsMap.put(7,1);
        intFactorsPowersOfTwoMinusOne.put(0x3f,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(127,1);
        intFactorsPowersOfTwoMinusOne.put(0x7f,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(17,1);
        factorsMap.put(3,1);
        factorsMap.put(5,1);
        intFactorsPowersOfTwoMinusOne.put(0xff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(7,1);
        factorsMap.put(73,1);
        intFactorsPowersOfTwoMinusOne.put(0x1ff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3,1);
        factorsMap.put(11,1);
        factorsMap.put(31,1);
        intFactorsPowersOfTwoMinusOne.put(0x3ff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(23,1);
        factorsMap.put(89,1);
        intFactorsPowersOfTwoMinusOne.put(0x7ff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3,2);
        factorsMap.put(5,1);
        factorsMap.put(7,1);
        factorsMap.put(13,1);
        intFactorsPowersOfTwoMinusOne.put(0xfff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(8191,1);
        intFactorsPowersOfTwoMinusOne.put(0x1fff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3,1);
        factorsMap.put(127,1);
        factorsMap.put(43,1);
        intFactorsPowersOfTwoMinusOne.put(0x3fff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(7,1);
        factorsMap.put(31,1);
        factorsMap.put(151,1);
        intFactorsPowersOfTwoMinusOne.put(0x7fff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(17,1);
        factorsMap.put(257,1);
        factorsMap.put(3,1);
        factorsMap.put(5,1);
        intFactorsPowersOfTwoMinusOne.put(0xffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(131071,1);
        intFactorsPowersOfTwoMinusOne.put(0x1ffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(19,1);
        factorsMap.put(3,3);
        factorsMap.put(7,1);
        factorsMap.put(73,1);
        intFactorsPowersOfTwoMinusOne.put(0x3ffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(524287,1);
        intFactorsPowersOfTwoMinusOne.put(0x7ffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3,1);
        factorsMap.put(5,2);
        factorsMap.put(11,1);
        factorsMap.put(41,1);
        factorsMap.put(31,1);
        intFactorsPowersOfTwoMinusOne.put(0xfffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(337,1);
        factorsMap.put(7,2);
        factorsMap.put(127,1);
        intFactorsPowersOfTwoMinusOne.put(0x1fffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3,1);
        factorsMap.put(683,1);
        factorsMap.put(23,1);
        factorsMap.put(89,1);
        intFactorsPowersOfTwoMinusOne.put(0x3fffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(178481,1);
        factorsMap.put(47,1);
        intFactorsPowersOfTwoMinusOne.put(0x7fffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(17,1);
        factorsMap.put(3,2);
        factorsMap.put(5,1);
        factorsMap.put(7,1);
        factorsMap.put(13,1);
        factorsMap.put(241,1);
        intFactorsPowersOfTwoMinusOne.put(0xffffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(1801,1);
        factorsMap.put(601,1);
        factorsMap.put(31,1);
        intFactorsPowersOfTwoMinusOne.put(0x1ffffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3,1);
        factorsMap.put(2731,1);
        factorsMap.put(8191,1);
        intFactorsPowersOfTwoMinusOne.put(0x3ffffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(262657,1);
        factorsMap.put(7,1);
        factorsMap.put(73,1);
        intFactorsPowersOfTwoMinusOne.put(0x7ffffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3,1);
        factorsMap.put(5,1);
        factorsMap.put(113,1);
        factorsMap.put(127,1);
        factorsMap.put(43,1);
        factorsMap.put(29,1);
        intFactorsPowersOfTwoMinusOne.put(0xfffffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(1103,1);
        factorsMap.put(233,1);
        factorsMap.put(2089,1);
        intFactorsPowersOfTwoMinusOne.put(0x1fffffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3,2);
        factorsMap.put(7,1);
        factorsMap.put(11,1);
        factorsMap.put(331,1);
        factorsMap.put(31,1);
        factorsMap.put(151,1);
        intFactorsPowersOfTwoMinusOne.put(0x3fffffff,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(2147483647,1);
        intFactorsPowersOfTwoMinusOne.put(0x7fffffff,factorsMap);
    }
    static Map<Long,Map<Long,Integer>> longFactorsPowersOfTwoMinusOne = new HashMap<Long,Map<Long,Integer>>(63);
    static {
        Map<Long,Integer> factorsMap = new HashMap<Long,Integer>();
        factorsMap.put(1L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1L,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3L,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(7L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7L,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        factorsMap.put(5L,1);
        longFactorsPowersOfTwoMinusOne.put(0xfL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(31L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1fL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,2);
        factorsMap.put(7L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3fL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(127L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7fL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(17L,1);
        factorsMap.put(3L,1);
        factorsMap.put(5L,1);
        longFactorsPowersOfTwoMinusOne.put(0xffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(7L,1);
        factorsMap.put(73L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1ffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        factorsMap.put(11L,1);
        factorsMap.put(31L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3ffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(23L,1);
        factorsMap.put(89L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7ffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,2);
        factorsMap.put(5L,1);
        factorsMap.put(7L,1);
        factorsMap.put(13L,1);
        longFactorsPowersOfTwoMinusOne.put(0xfffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(8191L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1fffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        factorsMap.put(127L,1);
        factorsMap.put(43L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3fffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(7L,1);
        factorsMap.put(31L,1);
        factorsMap.put(151L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7fffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(17L,1);
        factorsMap.put(257L,1);
        factorsMap.put(3L,1);
        factorsMap.put(5L,1);
        longFactorsPowersOfTwoMinusOne.put(0xffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(131071L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1ffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(19L,1);
        factorsMap.put(3L,3);
        factorsMap.put(7L,1);
        factorsMap.put(73L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3ffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(524287L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7ffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        factorsMap.put(5L,2);
        factorsMap.put(41L,1);
        factorsMap.put(11L,1);
        factorsMap.put(31L,1);
        longFactorsPowersOfTwoMinusOne.put(0xfffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(337L,1);
        factorsMap.put(7L,2);
        factorsMap.put(127L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1fffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        factorsMap.put(683L,1);
        factorsMap.put(23L,1);
        factorsMap.put(89L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3fffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(178481L,1);
        factorsMap.put(47L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7fffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(17L,1);
        factorsMap.put(3L,2);
        factorsMap.put(5L,1);
        factorsMap.put(7L,1);
        factorsMap.put(13L,1);
        factorsMap.put(241L,1);
        longFactorsPowersOfTwoMinusOne.put(0xffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(1801L,1);
        factorsMap.put(601L,1);
        factorsMap.put(31L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1ffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        factorsMap.put(2731L,1);
        factorsMap.put(8191L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3ffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(262657L,1);
        factorsMap.put(7L,1);
        factorsMap.put(73L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7ffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        factorsMap.put(5L,1);
        factorsMap.put(113L,1);
        factorsMap.put(127L,1);
        factorsMap.put(43L,1);
        factorsMap.put(29L,1);
        longFactorsPowersOfTwoMinusOne.put(0xfffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(1103L,1);
        factorsMap.put(233L,1);
        factorsMap.put(2089L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1fffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,2);
        factorsMap.put(7L,1);
        factorsMap.put(11L,1);
        factorsMap.put(331L,1);
        factorsMap.put(31L,1);
        factorsMap.put(151L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3fffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(2147483647L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7fffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(65537L,1);
        factorsMap.put(17L,1);
        factorsMap.put(257L,1);
        factorsMap.put(3L,1);
        factorsMap.put(5L,1);
        longFactorsPowersOfTwoMinusOne.put(0xffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(23L,1);
        factorsMap.put(7L,1);
        factorsMap.put(89L,1);
        factorsMap.put(599479L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1ffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(131071L,1);
        factorsMap.put(3L,1);
        factorsMap.put(43691L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3ffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(71L,1);
        factorsMap.put(122921L,1);
        factorsMap.put(127L,1);
        factorsMap.put(31L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7ffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(19L,1);
        factorsMap.put(3L,3);
        factorsMap.put(5L,1);
        factorsMap.put(37L,1);
        factorsMap.put(7L,1);
        factorsMap.put(109L,1);
        factorsMap.put(73L,1);
        factorsMap.put(13L,1);
        longFactorsPowersOfTwoMinusOne.put(0xfffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(616318177L,1);
        factorsMap.put(223L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1fffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        factorsMap.put(524287L,1);
        factorsMap.put(174763L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3fffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(121369L,1);
        factorsMap.put(7L,1);
        factorsMap.put(79L,1);
        factorsMap.put(8191L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7fffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(61681L,1);
        factorsMap.put(17L,1);
        factorsMap.put(3L,1);
        factorsMap.put(5L,2);
        factorsMap.put(41L,1);
        factorsMap.put(11L,1);
        factorsMap.put(31L,1);
        longFactorsPowersOfTwoMinusOne.put(0xffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(164511353L,1);
        factorsMap.put(13367L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1ffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(5419L,1);
        factorsMap.put(3L,2);
        factorsMap.put(337L,1);
        factorsMap.put(7L,2);
        factorsMap.put(127L,1);
        factorsMap.put(43L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3ffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(9719L,1);
        factorsMap.put(431L,1);
        factorsMap.put(2099863L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7ffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        factorsMap.put(683L,1);
        factorsMap.put(2113L,1);
        factorsMap.put(5L,1);
        factorsMap.put(397L,1);
        factorsMap.put(23L,1);
        factorsMap.put(89L,1);
        longFactorsPowersOfTwoMinusOne.put(0xfffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(631L,1);
        factorsMap.put(7L,1);
        factorsMap.put(23311L,1);
        factorsMap.put(73L,1);
        factorsMap.put(31L,1);
        factorsMap.put(151L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1fffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(2796203L,1);
        factorsMap.put(3L,1);
        factorsMap.put(178481L,1);
        factorsMap.put(47L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3fffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(4513L,1);
        factorsMap.put(13264529L,1);
        factorsMap.put(2351L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7fffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(17L,1);
        factorsMap.put(257L,1);
        factorsMap.put(3L,2);
        factorsMap.put(5L,1);
        factorsMap.put(97L,1);
        factorsMap.put(7L,1);
        factorsMap.put(13L,1);
        factorsMap.put(673L,1);
        factorsMap.put(241L,1);
        longFactorsPowersOfTwoMinusOne.put(0xffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(127L,1);
        factorsMap.put(4432676798593L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1ffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(4051L,1);
        factorsMap.put(3L,1);
        factorsMap.put(251L,1);
        factorsMap.put(1801L,1);
        factorsMap.put(601L,1);
        factorsMap.put(11L,1);
        factorsMap.put(31L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3ffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(131071L,1);
        factorsMap.put(103L,1);
        factorsMap.put(7L,1);
        factorsMap.put(2143L,1);
        factorsMap.put(11119L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7ffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        factorsMap.put(2731L,1);
        factorsMap.put(1613L,1);
        factorsMap.put(157L,1);
        factorsMap.put(5L,1);
        factorsMap.put(53L,1);
        factorsMap.put(8191L,1);
        longFactorsPowersOfTwoMinusOne.put(0xfffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(6361L,1);
        factorsMap.put(20394401L,1);
        factorsMap.put(69431L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1fffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(262657L,1);
        factorsMap.put(19L,1);
        factorsMap.put(3L,4);
        factorsMap.put(7L,1);
        factorsMap.put(87211L,1);
        factorsMap.put(73L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3fffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(881L,1);
        factorsMap.put(23L,1);
        factorsMap.put(3191L,1);
        factorsMap.put(201961L,1);
        factorsMap.put(89L,1);
        factorsMap.put(31L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7fffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(17L,1);
        factorsMap.put(15790321L,1);
        factorsMap.put(3L,1);
        factorsMap.put(5L,1);
        factorsMap.put(113L,1);
        factorsMap.put(127L,1);
        factorsMap.put(43L,1);
        factorsMap.put(29L,1);
        longFactorsPowersOfTwoMinusOne.put(0xffffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(32377L,1);
        factorsMap.put(524287L,1);
        factorsMap.put(7L,1);
        factorsMap.put(1212847L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1ffffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(1103L,1);
        factorsMap.put(3L,1);
        factorsMap.put(233L,1);
        factorsMap.put(59L,1);
        factorsMap.put(3033169L,1);
        factorsMap.put(2089L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3ffffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(179951L,1);
        factorsMap.put(3203431780337L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7ffffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(1321L,1);
        factorsMap.put(3L,2);
        factorsMap.put(5L,2);
        factorsMap.put(7L,1);
        factorsMap.put(11L,1);
        factorsMap.put(41L,1);
        factorsMap.put(331L,1);
        factorsMap.put(13L,1);
        factorsMap.put(61L,1);
        factorsMap.put(31L,1);
        factorsMap.put(151L,1);
        longFactorsPowersOfTwoMinusOne.put(0xfffffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(2305843009213693951L,1);
        longFactorsPowersOfTwoMinusOne.put(0x1fffffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(3L,1);
        factorsMap.put(715827883L,1);
        factorsMap.put(2147483647L,1);
        longFactorsPowersOfTwoMinusOne.put(0x3fffffffffffffffL,factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(92737L,1);
        factorsMap.put(337L,1);
        factorsMap.put(649657L,1);
        factorsMap.put(7L,2);
        factorsMap.put(127L,1);
        factorsMap.put(73L,1);
        longFactorsPowersOfTwoMinusOne.put(0x7fffffffffffffffL,factorsMap);
    }*/
    static Map<BigInteger,Map<BigInteger,Integer>> bigIntegerFactorsPowersOfTwoMinusOne = new HashMap<BigInteger,Map<BigInteger,Integer>>(2000);
    static {
        Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1", 16), factorsMap);
    }
    static {
        Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("f", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1f", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3f", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7f", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1ffff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 3);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7ffff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("7f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2ab", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2b931", 16), 1);
        factorsMap.put(new BigInteger("2f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        factorsMap.put(new BigInteger("f1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("709", 16), 1);
        factorsMap.put(new BigInteger("259", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("aab", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("40201", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("71", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        factorsMap.put(new BigInteger("1d", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("44f", 16), 1);
        factorsMap.put(new BigInteger("e9", 16), 1);
        factorsMap.put(new BigInteger("829", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("14b", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7fffffff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("10001", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("925b7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1ffff", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("aaab", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("47", 16), 1);
        factorsMap.put(new BigInteger("1e029", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 3);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("25", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("6d", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("24bc44e1", 16), 1);
        factorsMap.put(new BigInteger("df", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("7ffff", 16), 1);
        factorsMap.put(new BigInteger("2aaab", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1da19", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("4f", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("f0f1", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("9ce3e79", 16), 1);
        factorsMap.put(new BigInteger("3437", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("152b", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("25f7", 16), 1);
        factorsMap.put(new BigInteger("1af", 16), 1);
        factorsMap.put(new BigInteger("200a97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2ab", 16), 1);
        factorsMap.put(new BigInteger("841", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("18d", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("277", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("5b0f", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2aaaab", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2b931", 16), 1);
        factorsMap.put(new BigInteger("2f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("11a1", 16), 1);
        factorsMap.put(new BigInteger("ca6691", 16), 1);
        factorsMap.put(new BigInteger("92f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("61", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        factorsMap.put(new BigInteger("2a1", 16), 1);
        factorsMap.put(new BigInteger("f1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("40810204081", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("fd3", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("fb", 16), 1);
        factorsMap.put(new BigInteger("709", 16), 1);
        factorsMap.put(new BigInteger("259", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1ffff", 16), 1);
        factorsMap.put(new BigInteger("67", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("85f", 16), 1);
        factorsMap.put(new BigInteger("2b6f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("aab", 16), 1);
        factorsMap.put(new BigInteger("64d", 16), 1);
        factorsMap.put(new BigInteger("9d", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("35", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("18d9", 16), 1);
        factorsMap.put(new BigInteger("13731a1", 16), 1);
        factorsMap.put(new BigInteger("10f37", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("40201", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 4);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("154ab", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("371", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("c77", 16), 1);
        factorsMap.put(new BigInteger("314e9", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("f0f0f1", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("71", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        factorsMap.put(new BigInteger("1d", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7e79", 16), 1);
        factorsMap.put(new BigInteger("7ffff", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("1281af", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("44f", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("e9", 16), 1);
        factorsMap.put(new BigInteger("3b", 16), 1);
        factorsMap.put(new BigInteger("2e4851", 16), 1);
        factorsMap.put(new BigInteger("829", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2beef", 16), 1);
        factorsMap.put(new BigInteger("2e9db69cff1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("529", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("14b", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        factorsMap.put(new BigInteger("3d", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1fffffffffffffff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2aaaaaab", 16), 1);
        factorsMap.put(new BigInteger("7fffffff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("16a41", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("9e9b9", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffff", 16), factorsMap);

        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("10001", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("281", 16), 1);
        factorsMap.put(new BigInteger("663d81", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("8425296b5bdf", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("2ab", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("43", 16), 1);
        factorsMap.put(new BigInteger("5179", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("925b7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("b161194487", 16), 1);
        factorsMap.put(new BigInteger("b8bbec9", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("89", 16), 1);
        factorsMap.put(new BigInteger("1ffff", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("3b9", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("66cd", 16), 1);
        factorsMap.put(new BigInteger("aaab", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("2b931", 16), 1);
        factorsMap.put(new BigInteger("924925b6db7", 16), 1);
        factorsMap.put(new BigInteger("2f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("47", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("1e029", 16), 1);
        factorsMap.put(new BigInteger("1509b", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        factorsMap.put(new BigInteger("119", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2e4b979", 16), 1);
        factorsMap.put(new BigInteger("37c7f", 16), 1);
        factorsMap.put(new BigInteger("cb06149", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("9751", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 3);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("25", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("1b1", 16), 1);
        factorsMap.put(new BigInteger("6d", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("f1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2310b9", 16), 1);
        factorsMap.put(new BigInteger("883c1153d41", 16), 1);
        factorsMap.put(new BigInteger("1b7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("24bc44e1", 16), 1);
        factorsMap.put(new BigInteger("6f1", 16), 1);
        factorsMap.put(new BigInteger("df", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("189635b", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("a13e21", 16), 1);
        factorsMap.put(new BigInteger("189c1", 16), 1);
        factorsMap.put(new BigInteger("709", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("259", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("80401", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("1c9", 16), 1);
        factorsMap.put(new BigInteger("7ffff", 16), 1);
        factorsMap.put(new BigInteger("e5", 16), 1);
        factorsMap.put(new BigInteger("2aaab", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("8112264cd9bb77f", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1da19", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("aab", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("1554aab", 16), 1);
        factorsMap.put(new BigInteger("4f", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("103413e6cb7", 16), 1);
        factorsMap.put(new BigInteger("c0aba87", 16), 1);
        factorsMap.put(new BigInteger("a7f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("ff00ff01", 16), 1);
        factorsMap.put(new BigInteger("f0f1", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("5d2914f", 16), 1);
        factorsMap.put(new BigInteger("40201", 16), 1);
        factorsMap.put(new BigInteger("a21", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("115cf", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("20e64c149", 16), 1);
        factorsMap.put(new BigInteger("9ce3e79", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("53", 16), 1);
        factorsMap.put(new BigInteger("3437", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("c4372f855d824ca58e9", 16), 1);
        factorsMap.put(new BigInteger("a7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("152b", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("3871", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("71", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("595", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        factorsMap.put(new BigInteger("1d", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1ffff", 16), 1);
        factorsMap.put(new BigInteger("84214a52b5ad7bdf", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("25f7", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("1af", 16), 1);
        factorsMap.put(new BigInteger("2aaaaaaaaab", 16), 1);
        factorsMap.put(new BigInteger("200a97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("44f", 16), 1);
        factorsMap.put(new BigInteger("1051", 16), 1);
        factorsMap.put(new BigInteger("e9", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("829", 16), 1);
        factorsMap.put(new BigInteger("8f72eebe387", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2ab", 16), 1);
        factorsMap.put(new BigInteger("841", 16), 1);
        factorsMap.put(new BigInteger("161", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("18d", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("aebbc991", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1ffffffffffffffffffffff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 3);
        factorsMap.put(new BigInteger("277", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("5b0f", 16), 1);
        factorsMap.put(new BigInteger("14b", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("11f6e09", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("6babc21", 16), 1);
        factorsMap.put(new BigInteger("38f", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("5634792f1", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("679", 16), 1);
        factorsMap.put(new BigInteger("2aaaab", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("763d", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("115", 16), 1);
        factorsMap.put(new BigInteger("2b931", 16), 1);
        factorsMap.put(new BigInteger("3f5", 16), 1);
        factorsMap.put(new BigInteger("2f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("924924936db6db7", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("7fffffff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("11b", 16), 1);
        factorsMap.put(new BigInteger("11a1", 16), 1);
        factorsMap.put(new BigInteger("26989325b1", 16), 1);
        factorsMap.put(new BigInteger("ca6691", 16), 1);
        factorsMap.put(new BigInteger("92f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("191492ff", 16), 1);
        factorsMap.put(new BigInteger("bf", 16), 1);
        factorsMap.put(new BigInteger("7ffff", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("70fa3a01f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("10001", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("61", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("c1", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        factorsMap.put(new BigInteger("1538f41", 16), 1);
        factorsMap.put(new BigInteger("2a1", 16), 1);
        factorsMap.put(new BigInteger("f1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2cb7", 16), 1);
        factorsMap.put(new BigInteger("b73493decfd9b68318ef9", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3f80fe03f81", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        factorsMap.put(new BigInteger("40810204081", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7b2661a6f", 16), 1);
        factorsMap.put(new BigInteger("25831", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("c7", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("925b7", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("fd3", 16), 1);
        factorsMap.put(new BigInteger("1fa5", 16), 1);
        factorsMap.put(new BigInteger("65", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("fb", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 3);
        factorsMap.put(new BigInteger("709", 16), 1);
        factorsMap.put(new BigInteger("259", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("418d5", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("6c279f03a0f", 16), 1);
        factorsMap.put(new BigInteger("4bbe4964e1a8b11", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1ffff", 16), 1);
        factorsMap.put(new BigInteger("67", 16), 1);
        factorsMap.put(new BigInteger("133", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("85f", 16), 1);
        factorsMap.put(new BigInteger("1981", 16), 1);
        factorsMap.put(new BigInteger("2b6f", 16), 1);
        factorsMap.put(new BigInteger("b29", 16), 1);
        factorsMap.put(new BigInteger("aaab", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("d79331b1cd9080adb9", 16), 1);
        factorsMap.put(new BigInteger("9800b777", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("aab", 16), 1);
        factorsMap.put(new BigInteger("9d", 16), 1);
        factorsMap.put(new BigInteger("64d", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("35", 16), 1);
        factorsMap.put(new BigInteger("12675361", 16), 1);
        factorsMap.put(new BigInteger("d1791", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("251e9", 16), 1);
        factorsMap.put(new BigInteger("47", 16), 1);
        factorsMap.put(new BigInteger("1e029", 16), 1);
        factorsMap.put(new BigInteger("7207", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("1a0b9", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("18d9", 16), 1);
        factorsMap.put(new BigInteger("13731a1", 16), 1);
        factorsMap.put(new BigInteger("19852f0d8ec1", 16), 1);
        factorsMap.put(new BigInteger("10f37", 16), 1);
        factorsMap.put(new BigInteger("6b", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7ffffffffffffffffffffffffff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("40201", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("3c1e1", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 4);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("44221", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("25", 16), 1);
        factorsMap.put(new BigInteger("6d", 16), 1);
        factorsMap.put(new BigInteger("154ab", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2c76e2c7", 16), 1);
        factorsMap.put(new BigInteger("b83cbeccdc926056c109", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("371", 16), 1);
        factorsMap.put(new BigInteger("2ea586b", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2ab", 16), 1);
        factorsMap.put(new BigInteger("b9b", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("c77", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 2);
        factorsMap.put(new BigInteger("314e9", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("24bc44e1", 16), 1);
        factorsMap.put(new BigInteger("df", 16), 1);
        factorsMap.put(new BigInteger("1303dcb9", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("1913ca1", 16), 1);
        factorsMap.put(new BigInteger("4e88f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("f0f0f1", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("cab258ee1", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("71", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        factorsMap.put(new BigInteger("1421", 16), 1);
        factorsMap.put(new BigInteger("1d", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("5aef", 16), 1);
        factorsMap.put(new BigInteger("d3f", 16), 1);
        factorsMap.put(new BigInteger("3ca43f3d97c6f", 16), 1);
        factorsMap.put(new BigInteger("101c9", 16), 1);
        factorsMap.put(new BigInteger("1c8319", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7e79", 16), 1);
        factorsMap.put(new BigInteger("7ffff", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("9908251", 16), 1);
        factorsMap.put(new BigInteger("23b", 16), 1);
        factorsMap.put(new BigInteger("2aaab", 16), 1);
        factorsMap.put(new BigInteger("1281af", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3d9961", 16), 1);
        factorsMap.put(new BigInteger("3a67", 16), 1);
        factorsMap.put(new BigInteger("2b931", 16), 1);
        factorsMap.put(new BigInteger("2f", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("966fc18022f69", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("44f", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("6664ccd", 16), 1);
        factorsMap.put(new BigInteger("e9", 16), 1);
        factorsMap.put(new BigInteger("3b", 16), 1);
        factorsMap.put(new BigInteger("2e4851", 16), 1);
        factorsMap.put(new BigInteger("829", 16), 1);
        factorsMap.put(new BigInteger("20008001", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1da19", 16), 1);
        factorsMap.put(new BigInteger("1999", 16), 1);
        factorsMap.put(new BigInteger("15061", 16), 1);
        factorsMap.put(new BigInteger("3a9", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("4f", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("1d2b61f99", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2beef", 16), 1);
        factorsMap.put(new BigInteger("b11", 16), 1);
        factorsMap.put(new BigInteger("6cc31c19", 16), 1);
        factorsMap.put(new BigInteger("9133", 16), 1);
        factorsMap.put(new BigInteger("2e9db69cff1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("ef", 16), 1);
        factorsMap.put(new BigInteger("1ffff", 16), 1);
        factorsMap.put(new BigInteger("eaa150caf", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("4f07", 16), 1);
        factorsMap.put(new BigInteger("1e867bff69", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        factorsMap.put(new BigInteger("f0f1", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("529", 16), 1);
        factorsMap.put(new BigInteger("14b", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("3d", 16), 1);
        factorsMap.put(new BigInteger("10feef011", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        factorsMap.put(new BigInteger("f1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("168c2661efceb3c3748ef748e7", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("2d7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffffffffff", 16), factorsMap);

        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("1fffffffffffffff", 16), 1);
        factorsMap.put(new BigInteger("aaaaaaaaaaaaaab", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("9ce3e79", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("2776572c79ed291", 16), 1);
        factorsMap.put(new BigInteger("3b4fc7", 16), 1);
        factorsMap.put(new BigInteger("3437", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("5df05", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2aaaaaab", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("21e9", 16), 1);
        factorsMap.put(new BigInteger("15cd", 16), 1);
        factorsMap.put(new BigInteger("7fffffff", 16), 1);
        factorsMap.put(new BigInteger("c145", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3ea70096b1", 16), 1);
        factorsMap.put(new BigInteger("709", 16), 1);
        factorsMap.put(new BigInteger("259", 16), 1);
        factorsMap.put(new BigInteger("41606b48636df251", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("152b", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 3);
        factorsMap.put(new BigInteger("16a41", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("9e9b9", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        factorsMap.put(new BigInteger("11f703ee09", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7fffffffffffffffffffffffffffffff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("10001", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("3d30f19cd101", 16), 1);
        factorsMap.put(new BigInteger("42f01", 16), 1);
        factorsMap.put(new BigInteger("281", 16), 1);
        factorsMap.put(new BigInteger("663d81", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("25f7", 16), 1);
        factorsMap.put(new BigInteger("1af", 16), 1);
        factorsMap.put(new BigInteger("924924924936db6db6db7", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("200a97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7454ab", 16), 1);
        factorsMap.put(new BigInteger("64123", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("aab", 16), 1);
        factorsMap.put(new BigInteger("83", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("8425296b5bdf", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7c97d9108c2ad4329db02eb8f166349", 16), 1);
        factorsMap.put(new BigInteger("107", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("2ab", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("43", 16), 1);
        factorsMap.put(new BigInteger("5179", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        factorsMap.put(new BigInteger("841", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("18d", 16), 1);
        factorsMap.put(new BigInteger("420841", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("925b7", 16), 1);
        factorsMap.put(new BigInteger("4c585", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7ffff", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("8102142852a54ad5ab5ebd7bf7f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("6fcfa9", 16), 1);
        factorsMap.put(new BigInteger("b161194487", 16), 1);
        factorsMap.put(new BigInteger("b8bbec9", 16), 1);
        factorsMap.put(new BigInteger("61b04216c33", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("40201", 16), 1);
        factorsMap.put(new BigInteger("277", 16), 1);
        factorsMap.put(new BigInteger("54f7f", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("5b0f", 16), 1);
        factorsMap.put(new BigInteger("10f", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("2d72ec879791", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("89", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 2);
        factorsMap.put(new BigInteger("1ffff", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("3b9", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("29e66824961", 16), 1);
        factorsMap.put(new BigInteger("56981", 16), 1);
        factorsMap.put(new BigInteger("66cd", 16), 1);
        factorsMap.put(new BigInteger("aaab", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("126d9df90b42f22186f", 16), 1);
        factorsMap.put(new BigInteger("1bc894a5efde5b971", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("274a482261", 16), 1);
        factorsMap.put(new BigInteger("8b", 16), 1);
        factorsMap.put(new BigInteger("2aaaab", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("2b931", 16), 1);
        factorsMap.put(new BigInteger("924925b6db7", 16), 1);
        factorsMap.put(new BigInteger("2f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("19043ef56cca6ea8fda319c31", 16), 1);
        factorsMap.put(new BigInteger("51dd9dbc32f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2d3267d", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("47", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("1509b", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        factorsMap.put(new BigInteger("119", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("1e029", 16), 1);
        factorsMap.put(new BigInteger("712a29", 16), 1);
        factorsMap.put(new BigInteger("71", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("1d", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("8f97384b16239e9", 16), 1);
        factorsMap.put(new BigInteger("104ce069f", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("11a1", 16), 1);
        factorsMap.put(new BigInteger("ca6691", 16), 1);
        factorsMap.put(new BigInteger("92f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2e4b979", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("37c7f", 16), 1);
        factorsMap.put(new BigInteger("cb06149", 16), 1);
        factorsMap.put(new BigInteger("cb097a80581", 16), 1);
        factorsMap.put(new BigInteger("35cbe2b", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("b0cb9", 16), 1);
        factorsMap.put(new BigInteger("503e66e6e16f8c11", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("24fa95ea07", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("241", 16), 1);
        factorsMap.put(new BigInteger("9751", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 3);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("25", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("61", 16), 1);
        factorsMap.put(new BigInteger("1b1", 16), 1);
        factorsMap.put(new BigInteger("6d", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("2a1", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("7194a10dc1", 16), 1);
        factorsMap.put(new BigInteger("f1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("84210846318c6339ce739def7bdf", 16), 1);
        factorsMap.put(new BigInteger("44f", 16), 1);
        factorsMap.put(new BigInteger("e9", 16), 1);
        factorsMap.put(new BigInteger("829", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2310b9", 16), 1);
        factorsMap.put(new BigInteger("6d9", 16), 1);
        factorsMap.put(new BigInteger("883c1153d41", 16), 1);
        factorsMap.put(new BigInteger("18ec61f0e8e0b323", 16), 1);
        factorsMap.put(new BigInteger("1b7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("244925b49252490049237", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 3);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("40810204081", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("251", 16), 1);
        factorsMap.put(new BigInteger("24bc44e1", 16), 1);
        factorsMap.put(new BigInteger("6f1", 16), 1);
        factorsMap.put(new BigInteger("df", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("dd086b1", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("afef559", 16), 1);
        factorsMap.put(new BigInteger("95", 16), 1);
        factorsMap.put(new BigInteger("189635b", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffffffffffffffff", 16), factorsMap);

        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("4b298e922ee1921ef", 16), 1);
        factorsMap.put(new BigInteger("6cfda2bf2e119388fd2f1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("107fdef8021", 16), 1);
        factorsMap.put(new BigInteger("fd3", 16), 1);
        factorsMap.put(new BigInteger("a13e21", 16), 1);
        factorsMap.put(new BigInteger("fb", 16), 1);
        factorsMap.put(new BigInteger("709", 16), 1);
        factorsMap.put(new BigInteger("189c1", 16), 1);
        factorsMap.put(new BigInteger("259", 16), 1);
        factorsMap.put(new BigInteger("14b", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("da3f", 16), 1);
        factorsMap.put(new BigInteger("6078645e5a63722b9e4b9", 16), 1);
        factorsMap.put(new BigInteger("239917", 16), 1);
        factorsMap.put(new BigInteger("287a7", 16), 1);
        factorsMap.put(new BigInteger("46c9", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("80401", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("245e1", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("4c1", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("1c9", 16), 1);
        factorsMap.put(new BigInteger("7ffff", 16), 1);
        factorsMap.put(new BigInteger("e5", 16), 1);
        factorsMap.put(new BigInteger("2aaab", 16), 1);
        factorsMap.put(new BigInteger("164c4ff76c51", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1ffff", 16), 1);
        factorsMap.put(new BigInteger("67", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("397", 16), 1);
        factorsMap.put(new BigInteger("85f", 16), 1);
        factorsMap.put(new BigInteger("2b6f", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("3e8536e8565ccbc95728ef", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("8112264cd9bb77f", 16), 1);
        factorsMap.put(new BigInteger("13199", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2ab", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        factorsMap.put(new BigInteger("845e4d943", 16), 1);
        factorsMap.put(new BigInteger("269", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1083c9a54a9f", 16), 1);
        factorsMap.put(new BigInteger("137", 16), 1);
        factorsMap.put(new BigInteger("2ccf", 16), 1);
        factorsMap.put(new BigInteger("1152823a9", 16), 1);
        factorsMap.put(new BigInteger("11eff", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 2);
        factorsMap.put(new BigInteger("7fffffff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("64d", 16), 1);
        factorsMap.put(new BigInteger("4e1", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("139", 16), 1);
        factorsMap.put(new BigInteger("c31", 16), 1);
        factorsMap.put(new BigInteger("1554aab", 16), 1);
        factorsMap.put(new BigInteger("4f", 16), 1);
        factorsMap.put(new BigInteger("5551", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 2);
        factorsMap.put(new BigInteger("1da19", 16), 1);
        factorsMap.put(new BigInteger("aab", 16), 1);
        factorsMap.put(new BigInteger("9d", 16), 1);
        factorsMap.put(new BigInteger("35", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("e23940087", 16), 1);
        factorsMap.put(new BigInteger("79536c8eb4a71", 16), 1);
        factorsMap.put(new BigInteger("1811d8a6209", 16), 1);
        factorsMap.put(new BigInteger("32ca8551", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("103413e6cb7", 16), 1);
        factorsMap.put(new BigInteger("c0aba87", 16), 1);
        factorsMap.put(new BigInteger("2aaaaaaaaaaaaaaaaaab", 16), 1);
        factorsMap.put(new BigInteger("a7f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("203a7441", 16), 1);
        factorsMap.put(new BigInteger("d50409", 16), 1);
        factorsMap.put(new BigInteger("1a17", 16), 1);
        factorsMap.put(new BigInteger("3586873a59", 16), 1);
        factorsMap.put(new BigInteger("18d9", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("13731a1", 16), 1);
        factorsMap.put(new BigInteger("10f37", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("ff00ff01", 16), 1);
        factorsMap.put(new BigInteger("10001", 16), 1);
        factorsMap.put(new BigInteger("f0f1", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("28741f88ac01", 16), 1);
        factorsMap.put(new BigInteger("65401", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("30a81f", 16), 1);
        factorsMap.put(new BigInteger("509", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("a7ebddb09", 16), 1);
        factorsMap.put(new BigInteger("2b931", 16), 1);
        factorsMap.put(new BigInteger("2f", 16), 1);
        factorsMap.put(new BigInteger("cd82be41f9819351", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("5d2914f", 16), 1);
        factorsMap.put(new BigInteger("40201", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 5);
        factorsMap.put(new BigInteger("a21", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("10368ed1", 16), 1);
        factorsMap.put(new BigInteger("21109", 16), 1);
        factorsMap.put(new BigInteger("115cf", 16), 1);
        factorsMap.put(new BigInteger("a3", 16), 1);
        factorsMap.put(new BigInteger("154ab", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1f6cc6e796f81d5c9", 16), 1);
        factorsMap.put(new BigInteger("671353d59", 16), 1);
        factorsMap.put(new BigInteger("abea1", 16), 1);
        factorsMap.put(new BigInteger("691b191", 16), 1);
        factorsMap.put(new BigInteger("24b0f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("20e64c149", 16), 1);
        factorsMap.put(new BigInteger("9ce3e79", 16), 1);
        factorsMap.put(new BigInteger("b8d2a5", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("293efb5", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("53", 16), 1);
        factorsMap.put(new BigInteger("2c52d", 16), 1);
        factorsMap.put(new BigInteger("27b9", 16), 1);
        factorsMap.put(new BigInteger("3437", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("371", 16), 1);
        factorsMap.put(new BigInteger("1b1cd239b201b239a4727", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("c77", 16), 1);
        factorsMap.put(new BigInteger("314e9", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("925b7", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("c4372f855d824ca58e9", 16), 1);
        factorsMap.put(new BigInteger("322075ceb", 16), 1);
        factorsMap.put(new BigInteger("a61", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("25ef1", 16), 1);
        factorsMap.put(new BigInteger("48b", 16), 1);
        factorsMap.put(new BigInteger("a7", 16), 1);
        factorsMap.put(new BigInteger("1f3", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("23d7df", 16), 1);
        factorsMap.put(new BigInteger("39233f1831293e724d944f759295c219d5be1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("14b66c14f1", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("3871", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("595", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        factorsMap.put(new BigInteger("d21", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("f0f0f1", 16), 1);
        factorsMap.put(new BigInteger("152b", 16), 1);
        factorsMap.put(new BigInteger("71", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("1d", 16), 1);
        factorsMap.put(new BigInteger("f1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2a2a95cadcf0ee19df1a9a4db9", 16), 1);
        factorsMap.put(new BigInteger("6215b87c031", 16), 1);
        factorsMap.put(new BigInteger("fd9", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);

        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1745c5d17a2e88ba3", 16), 1);
        factorsMap.put(new BigInteger("1ffff", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("84214a52b5ad7bdf", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("aaab", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7e79", 16), 1);
        factorsMap.put(new BigInteger("7ffff", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("592ceaf", 16), 1);
        factorsMap.put(new BigInteger("2844e267e7858232cb3d7", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("1281af", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("25f7", 16), 1);
        factorsMap.put(new BigInteger("7a1d1", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("1af", 16), 1);
        factorsMap.put(new BigInteger("ad", 16), 1);
        factorsMap.put(new BigInteger("18d15", 16), 1);
        factorsMap.put(new BigInteger("2aaaaaaaaab", 16), 1);
        factorsMap.put(new BigInteger("199998ccccd", 16), 1);
        factorsMap.put(new BigInteger("200a97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("20e20e984dd3d96be70f", 16), 1);
        factorsMap.put(new BigInteger("f8fd6c8288fb07", 16), 1);
        factorsMap.put(new BigInteger("16f8a7", 16), 1);
        factorsMap.put(new BigInteger("b2681", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("44f", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("1051", 16), 1);
        factorsMap.put(new BigInteger("e9", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("3b", 16), 1);
        factorsMap.put(new BigInteger("2e4851", 16), 1);
        factorsMap.put(new BigInteger("15555554aaaaaab", 16), 1);
        factorsMap.put(new BigInteger("829", 16), 1);
        factorsMap.put(new BigInteger("8f72eebe387", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("47", 16), 1);
        factorsMap.put(new BigInteger("1e029", 16), 1);
        factorsMap.put(new BigInteger("715d40bd829492cd201f", 16), 1);
        factorsMap.put(new BigInteger("39ffa81", 16), 1);
        factorsMap.put(new BigInteger("9a7f", 16), 1);
        factorsMap.put(new BigInteger("709", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("259", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("a36fa2fc1", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2ab", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("723bc21", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("161", 16), 1);
        factorsMap.put(new BigInteger("841", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("18d", 16), 1);
        factorsMap.put(new BigInteger("37f21", 16), 1);
        factorsMap.put(new BigInteger("aebbc991", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2cf11", 16), 1);
        factorsMap.put(new BigInteger("7fdd5e49fcc05327", 16), 1);
        factorsMap.put(new BigInteger("2beef", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("684549de1", 16), 1);
        factorsMap.put(new BigInteger("2e9db69cff1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3b25d21", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("1ffffffffffffffffffffff", 16), 1);
        factorsMap.put(new BigInteger("4206c0e73e7409", 16), 1);
        factorsMap.put(new BigInteger("b3", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("104e5a80a157457abc6482776a0e7ee78c616da91", 16), 1);
        factorsMap.put(new BigInteger("167", 16), 1);
        factorsMap.put(new BigInteger("599", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1be48ad", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 3);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("25", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("6d", 16), 1);
        factorsMap.put(new BigInteger("5b0f", 16), 1);
        factorsMap.put(new BigInteger("d", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("11f6e09", 16), 1);
        factorsMap.put(new BigInteger("529", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("277", 16), 1);
        factorsMap.put(new BigInteger("d2f1", 16), 1);
        factorsMap.put(new BigInteger("14b", 16), 1);
        factorsMap.put(new BigInteger("3d", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("b5", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("5f6150206cbaeb0a51284f6f516249f", 16), 1);
        factorsMap.put(new BigInteger("11c3a1", 16), 1);
        factorsMap.put(new BigInteger("a9b1", 16), 1);
        factorsMap.put(new BigInteger("74b451", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("6babc21", 16), 1);
        factorsMap.put(new BigInteger("38f", 16), 1);
        factorsMap.put(new BigInteger("127873", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("aab", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("2b", 16), 1);
        factorsMap.put(new BigInteger("36e03", 16), 1);
        factorsMap.put(new BigInteger("60391d13b", 16), 1);
        factorsMap.put(new BigInteger("5634792f1", 16), 1);
        factorsMap.put(new BigInteger("1fff", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);

        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1fffffffffffffff", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("d951", 16), 1);
        factorsMap.put(new BigInteger("16f", 16), 1);
        factorsMap.put(new BigInteger("7834883996202c2aab7ee269", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("679", 16), 1);
        factorsMap.put(new BigInteger("2aaaab", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("763d", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("115", 16), 1);
        factorsMap.put(new BigInteger("2b931", 16), 1);
        factorsMap.put(new BigInteger("f0f0f0f0f0f0f0f0f0f0f1", 16), 1);
        factorsMap.put(new BigInteger("3f5", 16), 1);
        factorsMap.put(new BigInteger("2f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("ffffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("5a42576d55c57", 16), 1);
        factorsMap.put(new BigInteger("24bc44e1", 16), 1);
        factorsMap.put(new BigInteger("df", 16), 1);
        factorsMap.put(new BigInteger("176c12ed905937f6a3b5a7b9", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1ffffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("ad09f2b1", 16), 1);
        factorsMap.put(new BigInteger("924924936db6db7", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("2aaaaaab", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("7fffffff", 16), 1);
        factorsMap.put(new BigInteger("1f8fb21b", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3ffffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1ffff", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("bdabf2cddbdec98dd68a9906cc49096d691", 16), 1);
        factorsMap.put(new BigInteger("acd8f", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7ffffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("1be157edd", 16), 1);
        factorsMap.put(new BigInteger("eb1", 16), 1);
        factorsMap.put(new BigInteger("11b", 16), 1);
        factorsMap.put(new BigInteger("11a1", 16), 1);
        factorsMap.put(new BigInteger("7fffff000001", 16), 1);
        factorsMap.put(new BigInteger("26989325b1", 16), 1);
        factorsMap.put(new BigInteger("ca6691", 16), 1);
        factorsMap.put(new BigInteger("92f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("fffffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("40201", 16), 1);
        factorsMap.put(new BigInteger("abbcb671934086d21ff5f7", 16), 1);
        factorsMap.put(new BigInteger("16a41", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("9e9b9", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("17cdc7", 16), 1);
        factorsMap.put(new BigInteger("7f", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1fffffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("191492ff", 16), 1);
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("bf", 16), 1);
        factorsMap.put(new BigInteger("8e9", 16), 1);
        factorsMap.put(new BigInteger("7ffff", 16), 1);
        factorsMap.put(new BigInteger("29ca7493f1acd8ab", 16), 1);
        factorsMap.put(new BigInteger("b", 16), 1);
        factorsMap.put(new BigInteger("2aaab", 16), 1);
        factorsMap.put(new BigInteger("1f", 16), 1);
        factorsMap.put(new BigInteger("70fa3a01f", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3fffffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("4bb2d4cbc16cfe6e9", 16), 1);
        factorsMap.put(new BigInteger("1a551cea9", 16), 1);
        factorsMap.put(new BigInteger("17f", 16), 1);
        factorsMap.put(new BigInteger("12e7bddf70521", 16), 1);
        factorsMap.put(new BigInteger("94c9e0d91", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7fffffffffffffffffffffffffffffffffffffffffffffff", 16), factorsMap);

        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("D", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("61", 16), 1);
        factorsMap.put(new BigInteger("C1", 16), 1);
        factorsMap.put(new BigInteger("F1", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("281", 16), 1);
        factorsMap.put(new BigInteger("2A1", 16), 1);
        factorsMap.put(new BigInteger("10001", 16), 1);
        factorsMap.put(new BigInteger("663D81", 16), 1);
        factorsMap.put(new BigInteger("1538F41", 16), 1);
        factorsMap.put(new BigInteger("FFFFFFFF00000001", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^192 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("D2E63F", 16), 1);
        factorsMap.put(new BigInteger("D0E4B3D2CEA3F40A56F", 16), 1);
        factorsMap.put(new BigInteger("2F9A3E875747393D2F09274F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^193 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("3CB", 16), 1);
        factorsMap.put(new BigInteger("611", 16), 1);
        factorsMap.put(new BigInteger("2CB7", 16), 1);
        factorsMap.put(new BigInteger("7C49", 16), 1);
        factorsMap.put(new BigInteger("B73493DECFD9B68318EF9", 16), 1);
        factorsMap.put(new BigInteger("F4718E7F062A309", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^194 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("4F", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        factorsMap.put(new BigInteger("1FFF", 16), 1);
        factorsMap.put(new BigInteger("1DA19", 16), 1);
        factorsMap.put(new BigInteger("8425296B5BDF", 16), 1);
        factorsMap.put(new BigInteger("1B1F5D3EBAB3B3B574FAE9F27", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^195 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("1D", 16), 1);
        factorsMap.put(new BigInteger("2B", 16), 1);
        factorsMap.put(new BigInteger("71", 16), 1);
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("C5", 16), 1);
        factorsMap.put(new BigInteger("496AB63BD", 16), 1);
        factorsMap.put(new BigInteger("40810204081", 16), 1);
        factorsMap.put(new BigInteger("3F80FE03F81", 16), 1);
        factorsMap.put(new BigInteger("487EDDBC091", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^196 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1D3F", 16), 1);
        factorsMap.put(new BigInteger("1181B149E3E4C85E5F1FB2507D481CB8C6DD39E358BAD41", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^197 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 3);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("43", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("C7", 16), 1);
        factorsMap.put(new BigInteger("2AB", 16), 1);
        factorsMap.put(new BigInteger("14E3", 16), 1);
        factorsMap.put(new BigInteger("5179", 16), 1);
        factorsMap.put(new BigInteger("25831", 16), 1);
        factorsMap.put(new BigInteger("925B7", 16), 1);
        factorsMap.put(new BigInteger("7B2661A6F", 16), 1);
        factorsMap.put(new BigInteger("DC3048AA1123", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^198 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("264D41DEA1", 16), 1);
        factorsMap.put(new BigInteger("357857E1C1FC34D6B12D8CD398B9B7EBD953E7A9F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^199 - 1
    }
    static{
        Map<BigInteger,Integer> factorsMap = new HashMap<BigInteger,Integer>();

        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 3);
        factorsMap.put(new BigInteger("B", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("65", 16), 1);
        factorsMap.put(new BigInteger("FB", 16), 1);
        factorsMap.put(new BigInteger("191", 16), 1);
        factorsMap.put(new BigInteger("259", 16), 1);
        factorsMap.put(new BigInteger("709", 16), 1);
        factorsMap.put(new BigInteger("FD3", 16), 1);
        factorsMap.put(new BigInteger("1FA5", 16), 1);
        factorsMap.put(new BigInteger("F0F1", 16), 1);
        factorsMap.put(new BigInteger("53341", 16), 1);
        factorsMap.put(new BigInteger("418D5", 16), 1);
        factorsMap.put(new BigInteger("2A8911", 16), 1);
        factorsMap.put(new BigInteger("BD261521", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^200 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("649", 16), 1);
        factorsMap.put(new BigInteger("565F", 16), 1);
        factorsMap.put(new BigInteger("44FC4539D00B0DC3480F3A32661", 16), 1);
        factorsMap.put(new BigInteger("B8BBEC9", 16), 1);
        factorsMap.put(new BigInteger("B161194487", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^201 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("4BBE4964E1A8B11", 16), 1);
        factorsMap.put(new BigInteger("6C279F03A0F", 16), 1);
        factorsMap.put(new BigInteger("AAAAAAAAAAAAAAAAAAAAAAAAB", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^202 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("E9", 16), 1);
        factorsMap.put(new BigInteger("44F", 16), 1);
        factorsMap.put(new BigInteger("829", 16), 1);
        factorsMap.put(new BigInteger("214E1", 16), 1);
        factorsMap.put(new BigInteger("7426D77", 16), 1);
        factorsMap.put(new BigInteger("8898E565E58D448BD195B49C5821E59", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^203 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("D", 16), 1);
        factorsMap.put(new BigInteger("67", 16), 1);
        factorsMap.put(new BigInteger("89", 16), 1);
        factorsMap.put(new BigInteger("133", 16), 1);
        factorsMap.put(new BigInteger("199", 16), 1);
        factorsMap.put(new BigInteger("3B9", 16), 1);
        factorsMap.put(new BigInteger("85F", 16), 1);
        factorsMap.put(new BigInteger("B29", 16), 1);
        factorsMap.put(new BigInteger("BF5", 16), 1);
        factorsMap.put(new BigInteger("1981", 16), 1);
        factorsMap.put(new BigInteger("2B6F", 16), 1);
        factorsMap.put(new BigInteger("3565", 16), 1);
        factorsMap.put(new BigInteger("66CD", 16), 1);
        factorsMap.put(new BigInteger("1FFFF", 16), 1);
        factorsMap.put(new BigInteger("AAAB", 16), 1);
        factorsMap.put(new BigInteger("4F13D8C5", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^204 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("3437", 16), 1);
        factorsMap.put(new BigInteger("2CDE69", 16), 1);
        factorsMap.put(new BigInteger("9CE3E79", 16), 1);
        factorsMap.put(new BigInteger("105689B547", 16), 1);
        factorsMap.put(new BigInteger("2E2448E625B7B116CD46FD7841", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^205 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("9800B777", 16), 1);
        factorsMap.put(new BigInteger("60A85E90F1", 16), 1);
        factorsMap.put(new BigInteger("D79331B1CD9080ADB9", 16), 1);
        factorsMap.put(new BigInteger("7100EB84C5BF755B", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^206 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("2F", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("2B931", 16), 1);
        factorsMap.put(new BigInteger("1381F", 16), 1);
        factorsMap.put(new BigInteger("25D2C3CF", 16), 1);
        factorsMap.put(new BigInteger("924925B6DB7", 16), 1);
        factorsMap.put(new BigInteger("207D00E8EFF", 16), 1);
        factorsMap.put(new BigInteger("2659A6356B97", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^207 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("35", 16), 1);
        factorsMap.put(new BigInteger("9D", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("64D", 16), 1);
        factorsMap.put(new BigInteger("AAB", 16), 1);
        factorsMap.put(new BigInteger("1FFF", 16), 1);
        factorsMap.put(new BigInteger("D1791", 16), 1);
        factorsMap.put(new BigInteger("12675361", 16), 1);
        factorsMap.put(new BigInteger("FF00FF00FF00FF00FF00FF01", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^208 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("7FFFF", 16), 1);
        factorsMap.put(new BigInteger("563923F99889", 16), 1);
        factorsMap.put(new BigInteger("55F792D2CD36F", 16), 1);
        factorsMap.put(new BigInteger("46C42C50808084C661AA9", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^209 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("B", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("2B", 16), 1);
        factorsMap.put(new BigInteger("47", 16), 1);
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        factorsMap.put(new BigInteger("D3", 16), 1);
        factorsMap.put(new BigInteger("119", 16), 1);
        factorsMap.put(new BigInteger("14B", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("152B", 16), 1);
        factorsMap.put(new BigInteger("1A0B9", 16), 1);
        factorsMap.put(new BigInteger("251E9", 16), 1);
        factorsMap.put(new BigInteger("7207", 16), 1);
        factorsMap.put(new BigInteger("17E0F9", 16), 1);
        factorsMap.put(new BigInteger("A2379", 16), 1);
        factorsMap.put(new BigInteger("1E029", 16), 1);
        factorsMap.put(new BigInteger("1509B", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^210 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3B59", 16), 1);
        factorsMap.put(new BigInteger("344748E89698F3C89", 16), 1);
        factorsMap.put(new BigInteger("A8FBB4898018B5F28B18299CF748C3A9F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^211 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("6B", 16), 1);
        factorsMap.put(new BigInteger("18D9", 16), 1);
        factorsMap.put(new BigInteger("10F37", 16), 1);
        factorsMap.put(new BigInteger("EA58B1", 16), 1);
        factorsMap.put(new BigInteger("19852F0D8EC1", 16), 1);
        factorsMap.put(new BigInteger("22F4F051", 16), 1);
        factorsMap.put(new BigInteger("13731A1", 16), 1);
        factorsMap.put(new BigInteger("6666664CCCCCD", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^212 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("10399", 16), 1);
        factorsMap.put(new BigInteger("37C7F", 16), 1);
        factorsMap.put(new BigInteger("2E4B979", 16), 1);
        factorsMap.put(new BigInteger("CB06149", 16), 1);
        factorsMap.put(new BigInteger("278CD08DE7B055C7", 16), 1);
        factorsMap.put(new BigInteger("3A5C1D7CDDCAA7B9", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^213 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("283", 16), 1);
        factorsMap.put(new BigInteger("10FCAEA5E3998C02A77B49EB9", 16), 1);
        factorsMap.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFF", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^214 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("1AF", 16), 1);
        factorsMap.put(new BigInteger("6B9", 16), 1);
        factorsMap.put(new BigInteger("25F7", 16), 1);
        factorsMap.put(new BigInteger("200A97", 16), 1);
        factorsMap.put(new BigInteger("77DF908557", 16), 1);
        factorsMap.put(new BigInteger("2B9A0E0F", 16), 1);
        factorsMap.put(new BigInteger("F6708EBD39A380CDECD6EF", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^215 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 4);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("D", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("25", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("6D", 16), 1);
        factorsMap.put(new BigInteger("F1", 16), 1);
        factorsMap.put(new BigInteger("1B1", 16), 1);
        factorsMap.put(new BigInteger("40201", 16), 1);
        factorsMap.put(new BigInteger("154AB", 16), 1);
        factorsMap.put(new BigInteger("9751", 16), 1);
        factorsMap.put(new BigInteger("44221", 16), 1);
        factorsMap.put(new BigInteger("3C1E1", 16), 1);
        factorsMap.put(new BigInteger("2066E81", 16), 1);
        factorsMap.put(new BigInteger("7E697B0BD181", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^216 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("1459", 16), 1);
        factorsMap.put(new BigInteger("F421", 16), 1);
        factorsMap.put(new BigInteger("7FFFFFFF", 16), 1);
        factorsMap.put(new BigInteger("5022AAA5F4A4E9F903C9", 16), 1);
        factorsMap.put(new BigInteger("153D3BE36CF98B6547F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^217 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("B83CBECCDC926056C109", 16), 1);
        factorsMap.put(new BigInteger("1B7FB6CA4D87AA3770273", 16), 1);
        factorsMap.put(new BigInteger("2C76E2C7", 16), 1);
        factorsMap.put(new BigInteger("634D0E9", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^218 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("1B7", 16), 1);
        factorsMap.put(new BigInteger("F67", 16), 1);
        factorsMap.put(new BigInteger("2310B9", 16), 1);
        factorsMap.put(new BigInteger("883C1153D41", 16), 1);
        factorsMap.put(new BigInteger("10509EA19E5E9F126C9", 16), 1);
        factorsMap.put(new BigInteger("95075D42C725F29", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^219 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("B", 16), 2);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("18D", 16), 1);
        factorsMap.put(new BigInteger("2AB", 16), 1);
        factorsMap.put(new BigInteger("371", 16), 1);
        factorsMap.put(new BigInteger("841", 16), 1);
        factorsMap.put(new BigInteger("B9B", 16), 1);
        factorsMap.put(new BigInteger("C77", 16), 1);
        factorsMap.put(new BigInteger("314E9", 16), 1);
        factorsMap.put(new BigInteger("2EA586B", 16), 1);
        factorsMap.put(new BigInteger("34D3326680D", 16), 1);
        factorsMap.put(new BigInteger("60D4495DD9", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^220 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("52F", 16), 1);
        factorsMap.put(new BigInteger("1FFF", 16), 1);
        factorsMap.put(new BigInteger("1FFFF", 16), 1);
        factorsMap.put(new BigInteger("18B24D93FDE40BAD95F2F56D9D8916EB26F35B891CBE31", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^221 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("DF", 16), 1);
        factorsMap.put(new BigInteger("6F1", 16), 1);
        factorsMap.put(new BigInteger("D03", 16), 1);
        factorsMap.put(new BigInteger("4483", 16), 1);
        factorsMap.put(new BigInteger("4E88F", 16), 1);
        factorsMap.put(new BigInteger("189635B", 16), 1);
        factorsMap.put(new BigInteger("1913CA1", 16), 1);
        factorsMap.put(new BigInteger("24BC44E1", 16), 1);
        factorsMap.put(new BigInteger("1303DCB9", 16), 1);
        factorsMap.put(new BigInteger("62056060C093", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^222 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("476F", 16), 1);
        factorsMap.put(new BigInteger("3004F", 16), 1);
        factorsMap.put(new BigInteger("166051", 16), 1);
        factorsMap.put(new BigInteger("2C81E9", 16), 1);
        factorsMap.put(new BigInteger("4FA957EB6E9EB9AAA1", 16), 1);
        factorsMap.put(new BigInteger("7E426048DB98F7AD2D57", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^223 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("1D", 16), 1);
        factorsMap.put(new BigInteger("2B", 16), 1);
        factorsMap.put(new BigInteger("71", 16), 1);
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("1C1", 16), 1);
        factorsMap.put(new BigInteger("A81", 16), 1);
        factorsMap.put(new BigInteger("1421", 16), 1);
        factorsMap.put(new BigInteger("10001", 16), 1);
        factorsMap.put(new BigInteger("F0F0F1", 16), 1);
        factorsMap.put(new BigInteger("CAB258EE1", 16), 1);
        factorsMap.put(new BigInteger("AE98501", 16), 1);
        factorsMap.put(new BigInteger("145FD73CB5EC1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^224 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        factorsMap.put(new BigInteger("259", 16), 1);
        factorsMap.put(new BigInteger("277", 16), 1);
        factorsMap.put(new BigInteger("709", 16), 1);
        factorsMap.put(new BigInteger("189C1", 16), 1);
        factorsMap.put(new BigInteger("5B0F", 16), 1);
        factorsMap.put(new BigInteger("1C201", 16), 1);
        factorsMap.put(new BigInteger("96BB9", 16), 1);
        factorsMap.put(new BigInteger("A13E21", 16), 1);
        factorsMap.put(new BigInteger("505C009F", 16), 1);
        factorsMap.put(new BigInteger("313ED7A898CDD7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^225 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("E3", 16), 1);
        factorsMap.put(new BigInteger("D3F", 16), 1);
        factorsMap.put(new BigInteger("5AEF", 16), 1);
        factorsMap.put(new BigInteger("101C9", 16), 1);
        factorsMap.put(new BigInteger("BEB1", 16), 1);
        factorsMap.put(new BigInteger("1C8319", 16), 1);
        factorsMap.put(new BigInteger("25EB7D31", 16), 1);
        factorsMap.put(new BigInteger("3CA43F3D97C6F", 16), 1);
        factorsMap.put(new BigInteger("6D064F6854EF3B9", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^226 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("5FDFED62595479", 16), 1);
        factorsMap.put(new BigInteger("155C784C845FF0B4AC9FB257CAB00E8762C453CB2A37", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^227 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("D", 16), 1);
        factorsMap.put(new BigInteger("E5", 16), 1);
        factorsMap.put(new BigInteger("1C9", 16), 1);
        factorsMap.put(new BigInteger("23B", 16), 1);
        factorsMap.put(new BigInteger("2AAAB", 16), 1);
        factorsMap.put(new BigInteger("7E79", 16), 1);
        factorsMap.put(new BigInteger("2001D", 16), 1);
        factorsMap.put(new BigInteger("7FFFF", 16), 1);
        factorsMap.put(new BigInteger("1281AF", 16), 1);
        factorsMap.put(new BigInteger("274C9", 16), 1);
        factorsMap.put(new BigInteger("80401", 16), 1);
        factorsMap.put(new BigInteger("9908251", 16), 1);
        factorsMap.put(new BigInteger("4020080401", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^228 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("16F349", 16), 1);
        factorsMap.put(new BigInteger("138B1D1", 16), 1);
        factorsMap.put(new BigInteger("D4923669E20BC7", 16), 1);
        factorsMap.put(new BigInteger("15FEE101F81A2B4F54AB0691B734B7BF1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^229 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("B", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("2F", 16), 1);
        factorsMap.put(new BigInteger("2B3", 16), 1);
        factorsMap.put(new BigInteger("3A67", 16), 1);
        factorsMap.put(new BigInteger("2B931", 16), 1);
        factorsMap.put(new BigInteger("2AAAAB", 16), 1);
        factorsMap.put(new BigInteger("3D9961", 16), 1);
        factorsMap.put(new BigInteger("704D23E3", 16), 1);
        factorsMap.put(new BigInteger("13A793E2B023B", 16), 1);
        factorsMap.put(new BigInteger("966FC18022F69", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^230 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("1CF", 16), 1);
        factorsMap.put(new BigInteger("925B7", 16), 1);
        factorsMap.put(new BigInteger("F5A6B315159AFDD33C14321357C9", 16), 1);
        factorsMap.put(new BigInteger("8112264CD9BB77F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^231 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("3B", 16), 1);
        factorsMap.put(new BigInteger("E9", 16), 1);
        factorsMap.put(new BigInteger("44F", 16), 1);
        factorsMap.put(new BigInteger("829", 16), 1);
        factorsMap.put(new BigInteger("E801", 16), 1);
        factorsMap.put(new BigInteger("2E4851", 16), 1);
        factorsMap.put(new BigInteger("6664CCD", 16), 1);
        factorsMap.put(new BigInteger("20008001", 16), 1);
        factorsMap.put(new BigInteger("109DC950DA32FC88E84D688F1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^232 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("577", 16), 1);
        factorsMap.put(new BigInteger("211B7", 16), 1);
        factorsMap.put(new BigInteger("97FF1", 16), 1);
        factorsMap.put(new BigInteger("4C429036602121C057E1BFA2BAC5EDA6FE9519726FF5DFF", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^233 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 3);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("4F", 16), 1);
        factorsMap.put(new BigInteger("3A9", 16), 1);
        factorsMap.put(new BigInteger("AAB", 16), 1);
        factorsMap.put(new BigInteger("1999", 16), 1);
        factorsMap.put(new BigInteger("1FFF", 16), 1);
        factorsMap.put(new BigInteger("15061", 16), 1);
        factorsMap.put(new BigInteger("1DA19", 16), 1);
        factorsMap.put(new BigInteger("1554AAB", 16), 1);
        factorsMap.put(new BigInteger("1D2B61F99", 16), 1);
        factorsMap.put(new BigInteger("11F7047DC0FB823EE09", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^234 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("92F", 16), 1);
        factorsMap.put(new BigInteger("11A1", 16), 1);
        factorsMap.put(new BigInteger("CA6691", 16), 1);
        factorsMap.put(new BigInteger("E1926ED6128547B6BB60D4F57721F", 16), 1);
        factorsMap.put(new BigInteger("8E8891C1", 16), 1);
        factorsMap.put(new BigInteger("10D531CC81", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^235 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("49D", 16), 1);
        factorsMap.put(new BigInteger("B11", 16), 1);
        factorsMap.put(new BigInteger("DD5", 16), 1);
        factorsMap.put(new BigInteger("9133", 16), 1);
        factorsMap.put(new BigInteger("267D1", 16), 1);
        factorsMap.put(new BigInteger("2BEEF", 16), 1);
        factorsMap.put(new BigInteger("2AB1D", 16), 1);
        factorsMap.put(new BigInteger("54411D", 16), 1);
        factorsMap.put(new BigInteger("6CC31C19", 16), 1);
        factorsMap.put(new BigInteger("184EAE8935", 16), 1);
        factorsMap.put(new BigInteger("2E9DB69CFF1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^236 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("58F", 16), 1);
        factorsMap.put(new BigInteger("A7F", 16), 1);
        factorsMap.put(new BigInteger("C091", 16), 1);
        factorsMap.put(new BigInteger("C0ABA87", 16), 1);
        factorsMap.put(new BigInteger("103413E6CB7", 16), 1);
        factorsMap.put(new BigInteger("1494DB743874C043F", 16), 1);
        factorsMap.put(new BigInteger("1B32BC4FBFEEE9177", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^237 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2B", 16), 1);
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("EF", 16), 1);
        factorsMap.put(new BigInteger("4F07", 16), 1);
        factorsMap.put(new BigInteger("1FFFF", 16), 1);
        factorsMap.put(new BigInteger("AAAB", 16), 1);
        factorsMap.put(new BigInteger("31185AC3", 16), 1);
        factorsMap.put(new BigInteger("EAA150CAF", 16), 1);
        factorsMap.put(new BigInteger("1E867BFF69", 16), 1);
        factorsMap.put(new BigInteger("7C2C78F98AB3C5141", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^238 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1DF", 16), 1);
        factorsMap.put(new BigInteger("779", 16), 1);
        factorsMap.put(new BigInteger("1669", 16), 1);
        factorsMap.put(new BigInteger("2B0FF", 16), 1);
        factorsMap.put(new BigInteger("7FCAFE1", 16), 1);
        factorsMap.put(new BigInteger("4DD67D1493FEA12958C3ADD8582F926B6EF55AB9F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^239 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("B", 16), 1);
        factorsMap.put(new BigInteger("D", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("3D", 16), 1);
        factorsMap.put(new BigInteger("61", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        factorsMap.put(new BigInteger("F1", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("14B", 16), 1);
        factorsMap.put(new BigInteger("2A1", 16), 1);
        factorsMap.put(new BigInteger("529", 16), 1);
        factorsMap.put(new BigInteger("F0F1", 16), 1);
        factorsMap.put(new BigInteger("1787EBC1", 16), 1);
        factorsMap.put(new BigInteger("AEBFA6541", 16), 1);
        factorsMap.put(new BigInteger("FF00FF01", 16), 1);
        factorsMap.put(new BigInteger("10FEEF011", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^240 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("14FB319", 16), 1);
        factorsMap.put(new BigInteger("18671BE8A0F2D03DA7C731ED61EC65BEDED6639928A4035308E06D7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^241 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("2AB", 16), 1);
        factorsMap.put(new BigInteger("2D7", 16), 1);
        factorsMap.put(new BigInteger("1CA7B", 16), 1);
        factorsMap.put(new BigInteger("168C2661EFCEB3C3748EF748E7", 16), 1);
        factorsMap.put(new BigInteger("23B7CEA2FC7B5AAE1C22ECB3", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^242 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("1E7", 16), 1);
        factorsMap.put(new BigInteger("A21", 16), 1);
        factorsMap.put(new BigInteger("40201", 16), 1);
        factorsMap.put(new BigInteger("115CF", 16), 1);
        factorsMap.put(new BigInteger("F3CCB523CF1", 16), 1);
        factorsMap.put(new BigInteger("338730E1971ADD47", 16), 1);
        factorsMap.put(new BigInteger("5D2914F", 16), 1);
        factorsMap.put(new BigInteger("AF81B9F82201", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^243 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("2DD", 16), 1);
        factorsMap.put(new BigInteger("6AD", 16), 1);
        factorsMap.put(new BigInteger("34BEED", 16), 1);
        factorsMap.put(new BigInteger("9B4F994EE5", 16), 1);
        factorsMap.put(new BigInteger("55B6E37895", 16), 1);
        factorsMap.put(new BigInteger("1FFFFFFFFFFFFFFF", 16), 1);
        factorsMap.put(new BigInteger("AAAAAAAAAAAAAAB", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^244 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("47", 16), 1);
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("5BF", 16), 1);
        factorsMap.put(new BigInteger("1E029", 16), 1);
        factorsMap.put(new BigInteger("40810204081", 16), 1);
        factorsMap.put(new BigInteger("2C34359A0A0CF6F34C64F2ED12F7FEF3FF4DCABF", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^245 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("53", 16), 1);
        factorsMap.put(new BigInteger("2E3", 16), 1);
        factorsMap.put(new BigInteger("3437", 16), 1);
        factorsMap.put(new BigInteger("285C1", 16), 1);
        factorsMap.put(new BigInteger("3B4FC7", 16), 1);
        factorsMap.put(new BigInteger("9CE3E79", 16), 1);
        factorsMap.put(new BigInteger("20E64C149", 16), 1);
        factorsMap.put(new BigInteger("2EE02988427BD9", 16), 1);
        factorsMap.put(new BigInteger("2776572C79ED291", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^246 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1FFF", 16), 1);
        factorsMap.put(new BigInteger("3DC1", 16), 1);
        factorsMap.put(new BigInteger("7FFFF", 16), 1);
        factorsMap.put(new BigInteger("3F3F6A6DF6AAF53391D306A553C9", 16), 1);
        factorsMap.put(new BigInteger("5DFFC61F799", 16), 1);
        factorsMap.put(new BigInteger("16D9EDFF3D3DF", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^247 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("15CD", 16), 1);
        factorsMap.put(new BigInteger("21E9", 16), 1);
        factorsMap.put(new BigInteger("C145", 16), 1);
        factorsMap.put(new BigInteger("46F61", 16), 1);
        factorsMap.put(new BigInteger("5DF05", 16), 1);
        factorsMap.put(new BigInteger("3DE3499AF7082C6981", 16), 1);
        factorsMap.put(new BigInteger("2AAAAAAB", 16), 1);
        factorsMap.put(new BigInteger("7FFFFFFF", 16), 1);
        factorsMap.put(new BigInteger("E0B8BA11", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^248 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("A7", 16), 1);
        factorsMap.put(new BigInteger("60A37371", 16), 1);
        factorsMap.put(new BigInteger("C4372F855D824CA58E9", 16), 1);
        factorsMap.put(new BigInteger("183849667BFFB90318DE04D5837D2F8FA7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^249 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("B", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("FB", 16), 1);
        factorsMap.put(new BigInteger("259", 16), 1);
        factorsMap.put(new BigInteger("709", 16), 1);
        factorsMap.put(new BigInteger("FD3", 16), 1);
        factorsMap.put(new BigInteger("DB0759B", 16), 1);
        factorsMap.put(new BigInteger("3EA70096B1", 16), 1);
        factorsMap.put(new BigInteger("41606B48636DF251", 16), 1);
        factorsMap.put(new BigInteger("12B363F587D62C8E893", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^250 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1F7", 16), 1);
        factorsMap.put(new BigInteger("D3C9", 16), 1);
        factorsMap.put(new BigInteger("D0F82AF0D961C52EEB7", 16), 1);
        factorsMap.put(new BigInteger("9FC017CEB027AAE561591", 16), 1);
        factorsMap.put(new BigInteger("9A9712DEAAA1684A7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^251 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 3);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("D", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("1D", 16), 1);
        factorsMap.put(new BigInteger("25", 16), 1);
        factorsMap.put(new BigInteger("2B", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("6D", 16), 1);
        factorsMap.put(new BigInteger("71", 16), 1);
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("595", 16), 1);
        factorsMap.put(new BigInteger("152B", 16), 1);
        factorsMap.put(new BigInteger("3871", 16), 1);
        factorsMap.put(new BigInteger("16A41", 16), 1);
        factorsMap.put(new BigInteger("9E9B9", 16), 1);
        factorsMap.put(new BigInteger("11F703EE09", 16), 1);
        factorsMap.put(new BigInteger("967573165", 16), 1);
        factorsMap.put(new BigInteger("1BA60EB3AD", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^252 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("17", 16), 2);
        factorsMap.put(new BigInteger("2F", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("2B931", 16), 1);
        factorsMap.put(new BigInteger("F491AFB9", 16), 1);
        factorsMap.put(new BigInteger("2A57BB0909385B4233A9", 16), 1);
        factorsMap.put(new BigInteger("233C9292D6315AEB68BFA2AED39", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^253 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), 1);
        factorsMap.put(new BigInteger("2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^254 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("67", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        factorsMap.put(new BigInteger("85F", 16), 1);
        factorsMap.put(new BigInteger("2B6F", 16), 1);
        factorsMap.put(new BigInteger("1FFFF", 16), 1);
        factorsMap.put(new BigInteger("1A05F", 16), 1);
        factorsMap.put(new BigInteger("E7B77", 16), 1);
        factorsMap.put(new BigInteger("126CF51772D253CBA3F5A7CF", 16), 1);
        factorsMap.put(new BigInteger("84214A52B5AD7BDF", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^255 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("281", 16), 1);
        factorsMap.put(new BigInteger("10001", 16), 1);
        factorsMap.put(new BigInteger("42F01", 16), 1);
        factorsMap.put(new BigInteger("663D81", 16), 1);
        factorsMap.put(new BigInteger("3D30F19CD101", 16), 1);
        factorsMap.put(new BigInteger("13540775B48CC32BA01", 16), 1);
        factorsMap.put(new BigInteger("D3EAFC3AF14601", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^256 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("F4B9D4B015271182AC89", 16), 1);
        factorsMap.put(new BigInteger("1E695D2DB4F97", 16), 1);
        factorsMap.put(new BigInteger("119C7D242F69F19A967903F450593E4D1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^257 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("1AF", 16), 1);
        factorsMap.put(new BigInteger("409", 16), 1);
        factorsMap.put(new BigInteger("25F7", 16), 1);
        factorsMap.put(new BigInteger("200A97", 16), 1);
        factorsMap.put(new BigInteger("E445270ED2B", 16), 1);
        factorsMap.put(new BigInteger("924924924936DB6DB6DB7", 16), 1);
        factorsMap.put(new BigInteger("2AAAAAAAAAB", 16), 1);
        factorsMap.put(new BigInteger("5EDD9EB9", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^258 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("DF", 16), 1);
        factorsMap.put(new BigInteger("24BC44E1", 16), 1);
        factorsMap.put(new BigInteger("94F81309", 16), 1);
        factorsMap.put(new BigInteger("DDB27A334C500EE2F71929524D3D07EFFCC4CEEB44B847", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^259 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("B", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("35", 16), 1);
        factorsMap.put(new BigInteger("83", 16), 1);
        factorsMap.put(new BigInteger("9D", 16), 1);
        factorsMap.put(new BigInteger("209", 16), 1);
        factorsMap.put(new BigInteger("64D", 16), 1);
        factorsMap.put(new BigInteger("AAB", 16), 1);
        factorsMap.put(new BigInteger("1FFF", 16), 1);
        factorsMap.put(new BigInteger("C919", 16), 1);
        factorsMap.put(new BigInteger("64123", 16), 1);
        factorsMap.put(new BigInteger("7454AB", 16), 1);
        factorsMap.put(new BigInteger("8425296B5BDF", 16), 1);
        factorsMap.put(new BigInteger("2087CED", 16), 1);
        factorsMap.put(new BigInteger("625A8944AF99", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^260 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("E9", 16), 1);
        factorsMap.put(new BigInteger("44F", 16), 1);
        factorsMap.put(new BigInteger("829", 16), 1);
        factorsMap.put(new BigInteger("1051", 16), 1);
        factorsMap.put(new BigInteger("8F72EEBE387", 16), 1);
        factorsMap.put(new BigInteger("E070381C0E070381C0E071F8FC7E3F1F8FC7E3F1F9", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^261 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("107", 16), 1);
        factorsMap.put(new BigInteger("419", 16), 1);
        factorsMap.put(new BigInteger("486469", 16), 1);
        factorsMap.put(new BigInteger("7C97D9108C2AD4329DB02EB8F166349", 16), 1);
        factorsMap.put(new BigInteger("24D24C653651D39D24D7C89EB", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^262 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("5C77", 16), 1);
        factorsMap.put(new BigInteger("C580A018D19", 16), 1);
        factorsMap.put(new BigInteger("49E71C03269CC9423CD83EC918F5B7", 16), 1);
        factorsMap.put(new BigInteger("6372EC106FA992BCCCB667", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^263 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("D", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("43", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("F1", 16), 1);
        factorsMap.put(new BigInteger("161", 16), 1);
        factorsMap.put(new BigInteger("18D", 16), 1);
        factorsMap.put(new BigInteger("2AB", 16), 1);
        factorsMap.put(new BigInteger("841", 16), 1);
        factorsMap.put(new BigInteger("1CE1", 16), 1);
        factorsMap.put(new BigInteger("5179", 16), 1);
        factorsMap.put(new BigInteger("420841", 16), 1);
        factorsMap.put(new BigInteger("925B7", 16), 1);
        factorsMap.put(new BigInteger("4C585", 16), 1);
        factorsMap.put(new BigInteger("68FBFE91", 16), 1);
        factorsMap.put(new BigInteger("16F61B70A1", 16), 1);
        factorsMap.put(new BigInteger("AEBBC991", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^264 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("18D9", 16), 1);
        factorsMap.put(new BigInteger("10F37", 16), 1);
        factorsMap.put(new BigInteger("1B8B9F00E8E68DB5068B1A01F7D85FD9", 16), 1);
        factorsMap.put(new BigInteger("13731A1", 16), 1);
        factorsMap.put(new BigInteger("6D3E51077", 16), 1);
        factorsMap.put(new BigInteger("B3D9F74F6201", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^265 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("2B", 16), 1);
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("11AB", 16), 1);
        factorsMap.put(new BigInteger("2AAAB", 16), 1);
        factorsMap.put(new BigInteger("7FFFF", 16), 1);
        factorsMap.put(new BigInteger("8102142852A54AD5AB5EBD7BF7F", 16), 1);
        factorsMap.put(new BigInteger("1590D3418C2FCA7C59187DE89", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^266 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("4B3FA21", 16), 1);
        factorsMap.put(new BigInteger("1A26A66715DF", 16), 1);
        factorsMap.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFF", 16), 1);
        factorsMap.put(new BigInteger("1307DEC1550991BAE842891E809", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^267 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("10D", 16), 1);
        factorsMap.put(new BigInteger("E73545", 16), 1);
        factorsMap.put(new BigInteger("28E3929", 16), 1);
        factorsMap.put(new BigInteger("6FCFA9", 16), 1);
        factorsMap.put(new BigInteger("61B04216C33", 16), 1);
        factorsMap.put(new BigInteger("B8BBEC9", 16), 1);
        factorsMap.put(new BigInteger("98883FD9", 16), 1);
        factorsMap.put(new BigInteger("B161194487", 16), 1);
        factorsMap.put(new BigInteger("8DB9A35158D", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^268 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("D2E959", 16), 1);
        factorsMap.put(new BigInteger("26D74762F798AD0F20FE6DAA579260B4889D21837F975A12C636F0421B3117", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^269 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 4);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("B", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        factorsMap.put(new BigInteger("10F", 16), 1);
        factorsMap.put(new BigInteger("14B", 16), 1);
        factorsMap.put(new BigInteger("277", 16), 1);
        factorsMap.put(new BigInteger("32B", 16), 1);
        factorsMap.put(new BigInteger("5B0F", 16), 1);
        factorsMap.put(new BigInteger("40201", 16), 1);
        factorsMap.put(new BigInteger("3B11", 16), 1);
        factorsMap.put(new BigInteger("154AB", 16), 1);
        factorsMap.put(new BigInteger("54F7F", 16), 1);
        factorsMap.put(new BigInteger("11F6E09", 16), 1);
        factorsMap.put(new BigInteger("2D72EC879791", 16), 1);
        factorsMap.put(new BigInteger("15EEB0F3C5353", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^270 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("38C85B6D1", 16), 1);
        factorsMap.put(new BigInteger("24113E637DB5DB537DCF015E0055F51B24C8986152B40010C4DFC9539DCF", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^271 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 2);
        factorsMap.put(new BigInteger("89", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("3B9", 16), 1);
        factorsMap.put(new BigInteger("56981", 16), 1);
        factorsMap.put(new BigInteger("66CD", 16), 1);
        factorsMap.put(new BigInteger("5DA21", 16), 1);
        factorsMap.put(new BigInteger("1FFFF", 16), 1);
        factorsMap.put(new BigInteger("AAAB", 16), 1);
        factorsMap.put(new BigInteger("22762832C81", 16), 1);
        factorsMap.put(new BigInteger("29E66824961", 16), 1);
        factorsMap.put(new BigInteger("143B334FC8F7296C61", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^272 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 2);
        factorsMap.put(new BigInteger("4F", 16), 1);
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("38F", 16), 1);
        factorsMap.put(new BigInteger("1FFF", 16), 1);
        factorsMap.put(new BigInteger("1DA19", 16), 1);
        factorsMap.put(new BigInteger("E8ABF8CA9D9E9", 16), 1);
        factorsMap.put(new BigInteger("4B70E7E8E08BA3601", 16), 1);
        factorsMap.put(new BigInteger("6BABC21", 16), 1);
        factorsMap.put(new BigInteger("67B62EF", 16), 1);
        factorsMap.put(new BigInteger("5634792F1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^273 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("449", 16), 1);
        factorsMap.put(new BigInteger("3D03", 16), 1);
        factorsMap.put(new BigInteger("1BC894A5EFDE5B971", 16), 1);
        factorsMap.put(new BigInteger("722436734F7461", 16), 1);
        factorsMap.put(new BigInteger("126D9DF90B42F22186F", 16), 1);
        factorsMap.put(new BigInteger("176CE109C57F111", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^274 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("259", 16), 1);
        factorsMap.put(new BigInteger("371", 16), 1);
        factorsMap.put(new BigInteger("709", 16), 1);
        factorsMap.put(new BigInteger("C77", 16), 1);
        factorsMap.put(new BigInteger("314E9", 16), 1);
        factorsMap.put(new BigInteger("BF99B8D380E972D0969A1627A95AB48CF", 16), 1);
        factorsMap.put(new BigInteger("14B5B2E95ED1A4F84F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^275 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("D", 16), 1);
        factorsMap.put(new BigInteger("2F", 16), 1);
        factorsMap.put(new BigInteger("8B", 16), 1);
        factorsMap.put(new BigInteger("115", 16), 1);
        factorsMap.put(new BigInteger("3F5", 16), 1);
        factorsMap.put(new BigInteger("679", 16), 1);
        factorsMap.put(new BigInteger("763D", 16), 1);
        factorsMap.put(new BigInteger("2B931", 16), 1);
        factorsMap.put(new BigInteger("2AAAAB", 16), 1);
        factorsMap.put(new BigInteger("924925B6DB7", 16), 1);
        factorsMap.put(new BigInteger("274A482261", 16), 1);
        factorsMap.put(new BigInteger("4ECEC589EC5", 16), 1);
        factorsMap.put(new BigInteger("3FF8007FF001", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^276 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("111C11", 16), 1);
        factorsMap.put(new BigInteger("147118E9D568CCEE47B685830F40CEEDFF", 16), 1);
        factorsMap.put(new BigInteger("176C1EC84D45D5A8F4D2104C9AA962F1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^277 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("44C539", 16), 1);
        factorsMap.put(new BigInteger("51DD9DBC32F", 16), 1);
        factorsMap.put(new BigInteger("9ED3F92869C114D8F8B0DED223303", 16), 1);
        factorsMap.put(new BigInteger("19043EF56CCA6EA8FDA319C31", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^278 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("15F10F", 16), 1);
        factorsMap.put(new BigInteger("2F6467A003E6F", 16), 1);
        factorsMap.put(new BigInteger("1AECF345D6F80D83E7DE9", 16), 1);
        factorsMap.put(new BigInteger("84F7", 16), 1);
        factorsMap.put(new BigInteger("3F37", 16), 1);
        factorsMap.put(new BigInteger("7FFFFFFF", 16), 1);
        factorsMap.put(new BigInteger("924924936DB6DB7", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^279 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 2);
        factorsMap.put(new BigInteger("B", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("1D", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("29", 16), 1);
        factorsMap.put(new BigInteger("2B", 16), 1);
        factorsMap.put(new BigInteger("47", 16), 1);
        factorsMap.put(new BigInteger("71", 16), 1);
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("119", 16), 1);
        factorsMap.put(new BigInteger("F0F1", 16), 1);
        factorsMap.put(new BigInteger("712A29", 16), 1);
        factorsMap.put(new BigInteger("F0F0F1", 16), 1);
        factorsMap.put(new BigInteger("2D3267D", 16), 1);
        factorsMap.put(new BigInteger("10FFFEEEF011110FEEEF00011", 16), 1);
        factorsMap.put(new BigInteger("1E029", 16), 1);
        factorsMap.put(new BigInteger("1509B", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^280 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("13C21", 16), 1);
        factorsMap.put(new BigInteger("19E9D9CE852ACD5A5A35C4EAA034F0BFF8EA0E7187964BD94B554C27D831862B81F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^281 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("11B", 16), 1);
        factorsMap.put(new BigInteger("92F", 16), 1);
        factorsMap.put(new BigInteger("11A1", 16), 1);
        factorsMap.put(new BigInteger("19A66B", 16), 1);
        factorsMap.put(new BigInteger("CA6691", 16), 1);
        factorsMap.put(new BigInteger("8F97384B16239E9", 16), 1);
        factorsMap.put(new BigInteger("26989325B1", 16), 1);
        factorsMap.put(new BigInteger("19ECED6CD9", 16), 1);
        factorsMap.put(new BigInteger("104CE069F", 16), 1);
        factorsMap.put(new BigInteger("8366FDE29", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^282 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2597", 16), 1);
        factorsMap.put(new BigInteger("FF2785529", 16), 1);
        factorsMap.put(new BigInteger("36A9D25E8BDABF9EF3C85A6CD73BC1FFB9DDFFEDCB64FE2471524B2E131", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^283 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("239", 16), 1);
        factorsMap.put(new BigInteger("37C7F", 16), 1);
        factorsMap.put(new BigInteger("35CBE2B", 16), 1);
        factorsMap.put(new BigInteger("2E4B979", 16), 1);
        factorsMap.put(new BigInteger("CB097A80581", 16), 1);
        factorsMap.put(new BigInteger("14CEC50A9", 16), 1);
        factorsMap.put(new BigInteger("129FDCB7D", 16), 1);
        factorsMap.put(new BigInteger("6DF68145D5", 16), 1);
        factorsMap.put(new BigInteger("8DB45AD", 16), 1);
        factorsMap.put(new BigInteger("CB06149", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^284 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("97", 16), 1);
        factorsMap.put(new BigInteger("BF", 16), 1);
        factorsMap.put(new BigInteger("7E79", 16), 1);
        factorsMap.put(new BigInteger("7FFFF", 16), 1);
        factorsMap.put(new BigInteger("1281AF", 16), 1);
        factorsMap.put(new BigInteger("191492FF", 16), 1);
        factorsMap.put(new BigInteger("70FA3A01F", 16), 1);
        factorsMap.put(new BigInteger("50DA66DDC67C7D9A9F", 16), 1);
        factorsMap.put(new BigInteger("55E2F6A4E4D33745679", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^285 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("2AB", 16), 1);
        factorsMap.put(new BigInteger("7D3", 16), 1);
        factorsMap.put(new BigInteger("AAB", 16), 1);
        factorsMap.put(new BigInteger("1FFF", 16), 1);
        factorsMap.put(new BigInteger("B0CB9", 16), 1);
        factorsMap.put(new BigInteger("16EEFE211", 16), 1);
        factorsMap.put(new BigInteger("24FA95EA07", 16), 1);
        factorsMap.put(new BigInteger("26D653B43", 16), 1);
        factorsMap.put(new BigInteger("E18FD10FE6B", 16), 1);
        factorsMap.put(new BigInteger("503E66E6E16F8C11", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^286 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("3437", 16), 1);
        factorsMap.put(new BigInteger("2054CFDE4861EB8472EA804128FB3954B09F3A9DD55FF743BEB1", 16), 1);
        factorsMap.put(new BigInteger("9CE3E79", 16), 1);
        factorsMap.put(new BigInteger("3FD7CCD2F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^287 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 3);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("D", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("13", 16), 1);
        factorsMap.put(new BigInteger("25", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("61", 16), 1);
        factorsMap.put(new BigInteger("6D", 16), 1);
        factorsMap.put(new BigInteger("C1", 16), 1);
        factorsMap.put(new BigInteger("F1", 16), 1);
        factorsMap.put(new BigInteger("101", 16), 1);
        factorsMap.put(new BigInteger("1B1", 16), 1);
        factorsMap.put(new BigInteger("241", 16), 1);
        factorsMap.put(new BigInteger("2A1", 16), 1);
        factorsMap.put(new BigInteger("481", 16), 1);
        factorsMap.put(new BigInteger("18C1", 16), 1);
        factorsMap.put(new BigInteger("10001", 16), 1);
        factorsMap.put(new BigInteger("9751", 16), 1);
        factorsMap.put(new BigInteger("40D515B301", 16), 1);
        factorsMap.put(new BigInteger("1538F41", 16), 1);
        factorsMap.put(new BigInteger("9111B1FC1", 16), 1);
        factorsMap.put(new BigInteger("7194A10DC1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^288 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1FFFF", 16), 1);
        factorsMap.put(new BigInteger("C2BA3F", 16), 1);
        factorsMap.put(new BigInteger("25EAC5447E188F2CE1A1", 16), 1);
        factorsMap.put(new BigInteger("8E046A37265A7F0A78EB2DD32ECE5883B576FD29B5F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^289 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("B", 16), 1);
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("3B", 16), 1);
        factorsMap.put(new BigInteger("E9", 16), 1);
        factorsMap.put(new BigInteger("44F", 16), 1);
        factorsMap.put(new BigInteger("829", 16), 1);
        factorsMap.put(new BigInteger("2E4851", 16), 1);
        factorsMap.put(new BigInteger("734381", 16), 1);
        factorsMap.put(new BigInteger("33B047D5B84493D1850D123", 16), 1);
        factorsMap.put(new BigInteger("84210846318C6339CE739DEF7BDF", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^290 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("2CB7", 16), 1);
        factorsMap.put(new BigInteger("42A3F", 16), 1);
        factorsMap.put(new BigInteger("39B87557733C6A7622ACB5CC60B7", 16), 1);
        factorsMap.put(new BigInteger("B73493DECFD9B68318EF9", 16), 1);
        factorsMap.put(new BigInteger("143F1A2D9", 16), 1);
        factorsMap.put(new BigInteger("7B1A0B57", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^291 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("125", 16), 1);
        factorsMap.put(new BigInteger("1B7", 16), 1);
        factorsMap.put(new BigInteger("6D9", 16), 1);
        factorsMap.put(new BigInteger("26C9", 16), 1);
        factorsMap.put(new BigInteger("2310B9", 16), 1);
        factorsMap.put(new BigInteger("24E8955E81BC1", 16), 1);
        factorsMap.put(new BigInteger("883C1153D41", 16), 1);
        factorsMap.put(new BigInteger("1FFFFFFFFE000000001", 16), 1);
        factorsMap.put(new BigInteger("18EC61F0E8E0B323", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^292 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("21303DA081DC022C2688B1", 16), 1);
        factorsMap.put(new BigInteger("F6D53AF36B5117983B218804B2752552C6BC00B51C36F7953FAF", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^293 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 2);
        factorsMap.put(new BigInteger("7", 16), 3);
        factorsMap.put(new BigInteger("2B", 16), 1);
        factorsMap.put(new BigInteger("7F", 16), 1);
        factorsMap.put(new BigInteger("151", 16), 1);
        factorsMap.put(new BigInteger("152B", 16), 1);
        factorsMap.put(new BigInteger("B6D13", 16), 1);
        factorsMap.put(new BigInteger("1694763BF8CE3F29B", 16), 1);
        factorsMap.put(new BigInteger("244925B49252490049237", 16), 1);
        factorsMap.put(new BigInteger("40810204081", 16), 1);
        factorsMap.put(new BigInteger("3F80FE03F81", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^294 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("1F", 16), 1);
        factorsMap.put(new BigInteger("1271", 16), 1);
        factorsMap.put(new BigInteger("2BEEF", 16), 1);
        factorsMap.put(new BigInteger("2068F", 16), 1);
        factorsMap.put(new BigInteger("586A57", 16), 1);
        factorsMap.put(new BigInteger("2E9DB69CFF1", 16), 1);
        factorsMap.put(new BigInteger("19BD771ABBFD7", 16), 1);
        factorsMap.put(new BigInteger("EF1E9409EDB554A44F", 16), 1);
        factorsMap.put(new BigInteger("E33BF811", 16), 1);
        factorsMap.put(new BigInteger("7AD9E8F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^295 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("5", 16), 1);
        factorsMap.put(new BigInteger("11", 16), 1);
        factorsMap.put(new BigInteger("95", 16), 1);
        factorsMap.put(new BigInteger("DF", 16), 1);
        factorsMap.put(new BigInteger("251", 16), 1);
        factorsMap.put(new BigInteger("6F1", 16), 1);
        factorsMap.put(new BigInteger("189635B", 16), 1);
        factorsMap.put(new BigInteger("24BC44E1", 16), 1);
        factorsMap.put(new BigInteger("F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1", 16), 1);
        factorsMap.put(new BigInteger("AFEF559", 16), 1);
        factorsMap.put(new BigInteger("DD086B1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^296 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("7", 16), 1);
        factorsMap.put(new BigInteger("17", 16), 1);
        factorsMap.put(new BigInteger("49", 16), 1);
        factorsMap.put(new BigInteger("59", 16), 1);
        factorsMap.put(new BigInteger("C7", 16), 1);
        factorsMap.put(new BigInteger("40201", 16), 1);
        factorsMap.put(new BigInteger("25831", 16), 1);
        factorsMap.put(new BigInteger("925B7", 16), 1);
        factorsMap.put(new BigInteger("889279", 16), 1);
        factorsMap.put(new BigInteger("7B2661A6F", 16), 1);
        factorsMap.put(new BigInteger("1DEED22DA4F19D297E3768E5A2BD73D40A05A5C9", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^297 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("3", 16), 1);
        factorsMap.put(new BigInteger("4A9", 16), 1);
        factorsMap.put(new BigInteger("9EE51", 16), 1);
        factorsMap.put(new BigInteger("2497933", 16), 1);
        factorsMap.put(new BigInteger("4B298E922EE1921EF", 16), 1);
        factorsMap.put(new BigInteger("6CFDA2BF2E119388FD2F1", 16), 1);
        factorsMap.put(new BigInteger("19CCAC41CBF213E6E6FA6EB1", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^298 - 1
        }     static {         Map<BigInteger, Integer> factorsMap = new HashMap<BigInteger, Integer>();
        factorsMap.put(new BigInteger("2F", 16), 1);
        factorsMap.put(new BigInteger("257", 16), 1);
        factorsMap.put(new BigInteger("1FFF", 16), 1);
        factorsMap.put(new BigInteger("2B931", 16), 1);
        factorsMap.put(new BigInteger("8E89AF", 16), 1);
        factorsMap.put(new BigInteger("36D4D38D1", 16), 1);
        factorsMap.put(new BigInteger("E1B96E9309F9C93FF", 16), 1);
        factorsMap.put(new BigInteger("BA94607373F31627", 16), 1);
        factorsMap.put(new BigInteger("2C9E525232569355F", 16), 1);
        bigIntegerFactorsPowersOfTwoMinusOne.put(new BigInteger("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16), factorsMap);//2^299 - 1


    }
}